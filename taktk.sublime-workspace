{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"a",
				"auto"
			],
			[
				"Subs",
				"Subscriber"
			],
			[
				"subsc",
				"subscriber"
			],
			[
				"Attr",
				"AttrSpec"
			],
			[
				"Im",
				"ImportError"
			],
			[
				"glTr",
				"glTranslate"
			],
			[
				"ii",
				"init_gl"
			],
			[
				"dr",
				"draw_scene"
			],
			[
				"w",
				"while\tWhile Loop"
			],
			[
				"lex",
				"lexer"
			],
			[
				"p",
				"tip"
			],
			[
				"3",
				"35em"
			],
			[
				"gi",
				"i-github\tSVG Icon GitHub"
			],
			[
				"extr",
				"extra_header_link_icons="
			],
			[
				"lo",
				"logo_light="
			],
			[
				"sp",
				"sphinx_rtd_theme"
			],
			[
				"meta",
				"meta_content_scope"
			],
			[
				"illegal-",
				"illegal-assignment"
			],
			[
				"se",
				"separator."
			],
			[
				"Nam",
				"NameError"
			],
			[
				"var",
				"varname"
			],
			[
				"col",
				"columnconfigure"
			],
			[
				"un",
				"unsubscribe_from_all"
			],
			[
				"subscr",
				"subscribeable"
			],
			[
				"sub",
				"subscribing"
			],
			[
				"subc",
				"subscribe"
			],
			[
				"__",
				"__init__()"
			],
			[
				"Sub",
				"Subscribeable"
			],
			[
				"nam",
				"namespace"
			],
			[
				"ca",
				"call_gets"
			],
			[
				"cal",
				"call_sets"
			],
			[
				"ev",
				"eval_gets"
			],
			[
				"set",
				"set_response"
			],
			[
				"get",
				"getter_caller"
			],
			[
				"Wr",
				"Writeable"
			],
			[
				"Wri",
				"WritableStringVar"
			],
			[
				"e",
				"evaluate_string"
			],
			[
				"Ex",
				"Expression"
			],
			[
				"cl",
				"classmethod"
			],
			[
				"c",
				"classmethod"
			],
			[
				"com",
				"component"
			],
			[
				"ch",
				"children"
			],
			[
				"na",
				"namespace"
			],
			[
				"ty",
				"type"
			],
			[
				"in",
				"instructions"
			],
			[
				"las",
				"last_tag"
			],
			[
				"chi",
				"child"
			],
			[
				"la",
				"last_indent"
			],
			[
				"pr",
				"print()"
			],
			[
				"chil",
				"children"
			],
			[
				"ind",
				"indent"
			],
			[
				"par",
				"parent"
			],
			[
				"is",
				"isspace"
			],
			[
				"parse_next",
				"parse_next_instruction"
			],
			[
				"__get",
				"__getitem__"
			],
			[
				"parse",
				"parse_next_instruction"
			],
			[
				"ta",
				"taktk-args"
			],
			[
				"bra",
				"brackets."
			],
			[
				"co",
				"continuation."
			],
			[
				"attr",
				"attributes"
			],
			[
				"tra",
				"transparent"
			],
			[
				"conte",
				"contextmanager"
			],
			[
				"o",
				"other."
			],
			[
				"de",
				"default"
			],
			[
				"pa",
				"partitions"
			],
			[
				"l",
				"language"
			],
			[
				"layou",
				"layout_parent"
			],
			[
				"cont",
				"container"
			],
			[
				"im",
				"import"
			],
			[
				"curr",
				"current_page"
			],
			[
				"Mod",
				"ModuleType"
			],
			[
				"an",
				"annotate"
			],
			[
				"fall",
				"fallback_language"
			],
			[
				"wind",
				"window_class"
			],
			[
				"medi",
				"media_path"
			],
			[
				"fal",
				"fallback_language"
			],
			[
				"_creat",
				"_create_params"
			],
			[
				"dic",
				"dictionaries"
			],
			[
				"N",
				"Newlines"
			],
			[
				"res",
				"response_text"
			],
			[
				"winfo_",
				"winfo_rooty()"
			],
			[
				"posit",
				"position_widgets()"
			],
			[
				"app",
				"application"
			],
			[
				"vi",
				"view"
			],
			[
				"ur",
				"urllib."
			],
			[
				"cu",
				"current_url"
			],
			[
				"R",
				"RequestHandler"
			],
			[
				"Us",
				"Users"
			],
			[
				"appl",
				"application_server"
			],
			[
				"con",
				"converter()"
			],
			[
				"reg",
				"registerrer"
			],
			[
				"them",
				"theme_use()"
			],
			[
				"up",
				"update_entry"
			],
			[
				"for",
				"for_page()"
			],
			[
				"mo",
				"module"
			],
			[
				"r",
				"read()"
			],
			[
				"pag",
				"page_stores"
			],
			[
				"_s",
				"_store_file"
			],
			[
				"bas",
				"basicConfig"
			],
			[
				"url",
				"urlparse"
			],
			[
				"E",
				"Expression"
			],
			[
				"D",
				"Dictionary"
			],
			[
				"spl",
				"splitlines"
			],
			[
				"compo",
				"component_space"
			],
			[
				"En",
				"EnumComponent"
			],
			[
				"Na",
				"Namespace"
			],
			[
				"att",
				"attr_name"
			],
			[
				"ann",
				"ann\tannotate"
			],
			[
				"Compon",
				"ComponentNamespace"
			],
			[
				"Com",
				"ComponentNamespace"
			],
			[
				"_",
				"_instructions_"
			],
			[
				"line",
				"line_idx"
			],
			[
				"li",
				"line_idx"
			],
			[
				"last",
				"last_component"
			],
			[
				"cr",
				"create_todo"
			],
			[
				"Doe",
				"DoesExist"
			],
			[
				"from_",
				"from_uuid"
			],
			[
				"fro",
				"from_uuid"
			],
			[
				"Do",
				"DoesNotExist"
			],
			[
				"class",
				"classmethod"
			],
			[
				"settin",
				"settings_path"
			],
			[
				"Noti",
				"Notification"
			],
			[
				"No",
				"Notifica"
			],
			[
				"me",
				"menu_trans."
			],
			[
				"menu",
				"menu_trans"
			],
			[
				"child",
				"child_name"
			],
			[
				"st",
				"startswith()"
			],
			[
				"eva",
				"eval_structure"
			]
		]
	},
	"buffers":
	[
		{
			"file": "examples/simple.py",
			"settings":
			{
				"buffer_size": 307,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " tkin"
					},
					"BQAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": ".ttk"
					},
					"BAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					7,
					"left_delete",
					null,
					"BwAAABEAAAAAAAAAEQAAAAAAAAABAAAAaRAAAAAAAAAAEAAAAAAAAAABAAAAIA8AAAAAAAAADwAAAAAAAAABAAAAaw4AAAAAAAAADgAAAAAAAAABAAAAdA0AAAAAAAAADQAAAAAAAAABAAAAdAwAAAAAAAAADAAAAAAAAAABAAAALgsAAAAAAAAACwAAAAAAAAABAAAAcg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					5,
					"left_delete",
					null,
					"BQAAAAoAAAAAAAAACgAAAAAAAAABAAAAZQkAAAAAAAAACQAAAAAAAAABAAAAdAgAAAAAAAAACAAAAAAAAAABAAAAbgcAAAAAAAAABwAAAAAAAAABAAAAaQYAAAAAAAAABgAAAAAAAAABAAAAaw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "tkboo"
					},
					"BQAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert_completion",
					{
						"completion": "ttkbootstrap",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ttkbootstrap"
					},
					"AgAAAAUAAAAAAAAABQAAAAAAAAAGAAAAdHRrYm9vBQAAAAAAAAARAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " import"
					},
					"BwAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\nfrom"
					},
					"BQAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " takt"
					},
					"BQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": ".compon"
					},
					"BwAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "ent"
					},
					"AwAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " import"
					},
					"BwAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAADgAAAAAAAAAOQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert_completion",
					{
						"completion": "component",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "component"
					},
					"AgAAADcAAAAAAAAANwAAAAAAAAACAAAAY283AAAAAAAAAEAAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "df"
					},
					"AgAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					4,
					"left_delete",
					null,
					"BAAAAEYAAAAAAAAARgAAAAAAAAABAAAAZkUAAAAAAAAARQAAAAAAAAABAAAAZEQAAAAAAAAARAAAAAAAAAABAAAAZkMAAAAAAAAAQwAAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAAAAAAAAAEcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "ef"
					},
					"AgAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " ama"
					},
					"BAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAAAAAAAAAEYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEoAAAAAAAAATAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAAAAAAAAAEoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\nretur"
					},
					"BwAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFMAAAAAAAAAAAAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAAAAAAAAAE0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAFcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " str"
					},
					"BAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAAAAAAAAAE8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAF4AAAAAAAAAXwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAF4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n\npri"
					},
					"BQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAATkA"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAAAAAAAAAGcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkAAAAAAAAAawAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "ama"
					},
					"AwAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG0AAAAAAAAAbwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAG4AAAAAAAAAbwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAHEAAAAAAAAAcgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAAAAAAAAAGMAAAAAAAAAAAAAAABAUkA"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAAABAAAAZA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAAAAAAAAAGMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGgAAAAAAAAAagAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAGkAAAAAAAAAaQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAGkAAAAAAAAAaQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAGkAAAAAAAAAaQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAGkAAAAAAAAAaQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert_snippet",
					{
						"contents": "sep: Optional[str]=${1:...}, end: Optional[str]=${2:...}, file: Optional[SupportsWrite[str]]=${3:...}, flush: bool=${4:...}"
					},
					"AQAAAGkAAAAAAAAA0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"left_delete",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAABvAAAAcHJpbnQoc2VwOiBPcHRpb25hbFtzdHJdPS4uLiwgZW5kOiBPcHRpb25hbFtzdHJdPS4uLiwgZmlsZTogT3B0aW9uYWxbU3VwcG9ydHNXcml0ZVtzdHJdXT0uLi4sIGZsdXNoOiBib29sPS4uLikK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAAAAAAAAANIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGcAAAAAAAAAaQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAAAAAAAAAGcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAGgAAAAAAAAAaAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAGgAAAAAAAAAaAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "sep: Optional[str]=${1:...}, end: Optional[str]=${2:...}, file: Optional[SupportsWrite[str]]=${3:...}, flush: bool=${4:...}"
					},
					"AQAAAGgAAAAAAAAAzwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"left_delete",
					null,
					"AQAAAGIAAAAAAAAAYgAAAAAAAABvAAAAcHJpbnQoc2VwOiBPcHRpb25hbFtzdHJdPS4uLiwgZW5kOiBPcHRpb25hbFtzdHJdPS4uLiwgZmlsZTogT3B0aW9uYWxbU3VwcG9ydHNXcml0ZVtzdHJdXT0uLi4sIGZsdXNoOiBib29sPS4uLikK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAANEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAEEAAAAAAAAAQQAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAAAAA"
				],
				[
					139,
					1,
					"left_delete",
					null,
					"AQAAAEAAAAAAAAAAQAAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAAEEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"left_delete",
					null,
					"AQAAAG0AAAAAAAAAbQAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAAbEA"
				],
				[
					146,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAG0AAAAAAAAAbgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"left_delete",
					null,
					"AQAAAEEAAAAAAAAAQQAAAAAAAAAtAAAAZGVmIGFtYSgpIC0+IHN0cjoKICAgIHJldHVybiAzCnByaW50KGFtYSg0KSkK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAABkAAAAAAAAAGQAAAAAAAAABAAAAKg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "Window"
					},
					"BgAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAAAAAAAAAEYAAAAAAAAAAAAAAABgZ0A"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "@com"
					},
					"BAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert_completion",
					{
						"completion": "component",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "component"
					},
					"AgAAAEkAAAAAAAAASQAAAAAAAAADAAAAY29tSQAAAAAAAABSAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "\ndef"
					},
					"BAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWAAAAAAAAAFYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "Sample"
					},
					"BgAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAFcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					5,
					"left_delete",
					null,
					"BQAAAFwAAAAAAAAAXAAAAAAAAAABAAAAZVsAAAAAAAAAWwAAAAAAAAABAAAAbFoAAAAAAAAAWgAAAAAAAAABAAAAcFkAAAAAAAAAWQAAAAAAAAABAAAAbVgAAAAAAAAAWAAAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "imple"
					},
					"BQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF0AAAAAAAAAXwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAF4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAAAAAAAAAGMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABpAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "r:::"
					},
					"BAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					3,
					"left_delete",
					null,
					"AwAAAGwAAAAAAAAAbAAAAAAAAAABAAAAOmsAAAAAAAAAawAAAAAAAAABAAAAOmoAAAAAAAAAagAAAAAAAAABAAAAOg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGoAAAAAAAAAbAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "\"\"\"\""
					},
					"BAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdwAAAAAAAAAAAAAAbgAAAAAAAABuAAAAAAAAAAQAAAAgICAg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					1,
					"reindent",
					null,
					"AQAAAG4AAAAAAAAAcgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAAOEA"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB3AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAAAAAAAAAHIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					2,
					"left_delete",
					null,
					"AgAAAHMAAAAAAAAAcwAAAAAAAAAEAAAAICAgIHIAAAAAAAAAcgAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AAAAAAAAAHcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAAAAAAAAAHIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "frame"
					},
					"BQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAAAAAAAAAHMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\n\t\\"
					},
					"BAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "label"
					},
					"BQAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAAAAAAAAAIIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " text="
					},
					"BgAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAAAAAAAAAIcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					198,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAI0AAAAAAAAAjwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "hello"
					},
					"BQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAApgAAAAAAAAAAAAAAnQAAAAAAAACdAAAAAAAAAAQAAAAgICAg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAACgY0A"
				],
				[
					202,
					1,
					"left_delete",
					null,
					"AQAAAJ4AAAAAAAAAngAAAAAAAAAEAAAAICAgIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "Si"
					},
					"AgAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAAAAAAAAAJ4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert_completion",
					{
						"completion": "Simple",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Simple"
					},
					"AgAAAJ4AAAAAAAAAngAAAAAAAAACAAAAU2meAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKQAAAAAAAAApgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": ".rende"
					},
					"BgAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAKwAAAAAAAAArQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK0AAAAAAAAArwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAAAAAAAAAK0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "\nroot"
					},
					"BQAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAABAWEA"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " T"
					},
					"AgAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AQAAAKUAAAAAAAAApQAAAAAAAAABAAAAVA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "Wi"
					},
					"AgAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAAAAAAAAAKUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"insert_completion",
					{
						"completion": "Window",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Window"
					},
					"AgAAAKUAAAAAAAAApQAAAAAAAAACAAAAV2mlAAAAAAAAAKsAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsAAAAAAAAArQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAAAAAAAAAKsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "root"
					},
					"BAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AAAAAAAAAL4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": ".pa"
					},
					"AwAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "ck"
					},
					"AgAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMgAAAAAAAAAygAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMoAAAAAAAAAywAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "\nroot.mai"
					},
					"CQAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAAAAAAAAAMsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "nloop"
					},
					"BQAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAAAAAAAAANQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANkAAAAAAAAA2wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ0AAAAAAAAAngAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAABAVUA"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " pos:"
					},
					"BQAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": "pack"
					},
					"BAAAAJkAAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACbAAAAAAAAAAAAAACbAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAAAAAAAAAJkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"left_delete",
					null,
					"AQAAAKUAAAAAAAAApQAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAARUA"
				],
				[
					267,
					1,
					"left_delete",
					null,
					"AQAAAKUAAAAAAAAApQAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAARUA"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAEUAAAAAAAAARQAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAEUAAAAAAAAARQAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAGxA"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAowAAAAAAAAAAAAAAAMBWQA"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAKQAAAAAAAAApAAAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKQAAAAAAAAApQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcAAAAAAAAARwAAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\nretur"
					},
					"BwAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUAAAAAAAAApQAAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAK8AAAAAAAAAsAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8AAAAAAAAArwAAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " locals"
					},
					"BwAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAC1AAAAAAAAALYAAAAAAAAAAAAAALYAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALcAAAAAAAAAuQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcAAAAAAAAAtwAAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "\n\\en"
					},
					"BQAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0AAAAAAAAAnQAAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkAAAAAAAAAqQAAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " text"
					},
					"BQAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAALEAAAAAAAAAsgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEAAAAAAAAAsQAAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALIAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIAAAAAAAAAsgAAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AQAAALMAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMAAAAAAAAAswAAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					2,
					"left_delete",
					null,
					"AgAAALQAAAAAAAAAtAAAAAAAAAABAAAAZLMAAAAAAAAAswAAAAAAAAABAAAAJQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALIAAAAAAAAAsgAAAAAAAAABAAAAe7IAAAAAAAAAsgAAAAAAAAABAAAAfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMAAAAAAAAAswAAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					5,
					"left_delete",
					null,
					"BQAAALEAAAAAAAAAsQAAAAAAAAABAAAAPbAAAAAAAAAAsAAAAAAAAAABAAAAdK8AAAAAAAAArwAAAAAAAAABAAAAeK4AAAAAAAAArgAAAAAAAAABAAAAZa0AAAAAAAAArQAAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIAAAAAAAAAsgAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "valie"
					},
					"BQAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAACvAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0AAAAAAAAArQAAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					2,
					"left_delete",
					null,
					"AgAAALEAAAAAAAAAsQAAAAAAAAABAAAAZbAAAAAAAAAAsAAAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIAAAAAAAAAsgAAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "ue="
					},
					"AwAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALMAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMAAAAAAAAAswAAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAALQAAAAAAAAAtAAAAAAAAAABAAAAJg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "$d"
					},
					"AgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"left_delete",
					null,
					"AQAAALUAAAAAAAAAtQAAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYAAAAAAAAAtgAAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "text"
					},
					"BAAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAuQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "\ntext"
					},
					"BgAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIAAAAAAAAAwgAAAAAAAAAAAAAAAGBkQA"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsAAAAAAAAAywAAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0AAAAAAAAAzgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0AAAAAAAAAzQAAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAM4AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4AAAAAAAAAzgAAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "hello"
					},
					"BQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8AAAAAAAAAzwAAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"left_delete",
					null,
					"AQAAAI0AAAAAAAAAjQAAAAAAAAAHAAAAImhlbGxvIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0AAAAAAAAAlAAAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0AAAAAAAAAjwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0AAAAAAAAAjQAAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "text"
					},
					"BAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4AAAAAAAAAjgAAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAAKwAAAAAAAAArAAAAAAAAAAFAAAAdmFsdWU",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwAAAAAAAAAsQAAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "text"
					},
					"BAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " pos:pa"
					},
					"BwAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "ck"
					},
					"AgAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8AAAAAAAAAvwAAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4AAAAAAAAAjgAAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAJQAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAANMAAAAAAAAA0wAAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAMwEAAAAAAAAzAQAAZnJvbSB0dGtib290c3RyYXAgaW1wb3J0IFdpbmRvdwpmcm9tIHRha3RrLmNvbXBvbmVudCBpbXBvcnQgY29tcG9uZW50CgoKQGNvbXBvbmVudApkZWYgU2ltcGxlKHNlbGYpOgogICAgciIiIgogICAgXGZyYW1lCiAgICAgICAgXGxhYmVsIHRleHQ9e3t0ZXh0fX0gcG9zOnBhY2sKICAgICAgICBcZW50cnkgdGV4dD17JHRleHR9IHBvczpwYWNrCiAgICAiIiIKICAgIHRleHQgPSAiaGVsbG8iCiAgICByZXR1cm4gbG9jYWxzKCkKCgpyb290ID0gV2luZG93KCkKU2ltcGxlKCkucmVuZGVyKHJvb3QpLnBhY2soKQoKcm9vdC5tYWlubG9vcCgpCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"left_delete",
					null,
					"AQAAANMAAAAAAAAA0wAAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAMwEAAAAAAAAzAQAAZnJvbSB0dGtib290c3RyYXAgaW1wb3J0IFdpbmRvdwpmcm9tIHRha3RrLmNvbXBvbmVudCBpbXBvcnQgY29tcG9uZW50CgoKQGNvbXBvbmVudApkZWYgU2ltcGxlKHNlbGYpOgogICAgciIiIgogICAgXGZyYW1lCiAgICAgICAgXGxhYmVsIHRleHQ9e3t0ZXh0fX0gcG9zOnBhY2sKICAgICAgICBcZW50cnkgdGV4dD17JHRleHR9IHBvczpwYWNrCiAgICAiIiIKICAgIHRleHQgPSAiaGVsbG8iCiAgICByZXR1cm4gbG9jYWxzKCkKCgpyb290ID0gV2luZG93KCkKU2ltcGxlKCkucmVuZGVyKHJvb3QpLnBhY2soKQoKcm9vdC5tYWlubG9vcCgpCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "src/taktk/component.py",
			"settings":
			{
				"buffer_size": 12963,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					522,
					1,
					"insert",
					{
						"characters": "Tuple"
					},
					"BQAAAGIDAAAAAAAAYwMAAAAAAAAAAAAAYwMAAAAAAABkAwAAAAAAAAAAAABkAwAAAAAAAGUDAAAAAAAAAAAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAZgMAAAAAAABnAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIDAAAAAAAAYgMAAAAAAAAAAAAAAADwvw"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAGcDAAAAAAAAaAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcDAAAAAAAAZwMAAAAAAAAAAAAAAADwvw"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAIADAAAAAAAAgQMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIADAAAAAAAAgAMAAAAAAAAAAAAAAADwvw"
				],
				[
					529,
					1,
					"left_delete",
					null,
					"AQAAAMMDAAAAAAAAwwMAAAAAAAAPAAAAdHVwbGVbQXR0clNwZWNd",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMDAAAAAAAA0gMAAAAAAAAAAAAAAADwvw"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAAMMDAAAAAAAAxAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMDAAAAAAAAwwMAAAAAAAAAAAAAAADwvw"
				],
				[
					531,
					1,
					"insert_completion",
					{
						"completion": "AttrSpec",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "AttrSpec"
					},
					"AgAAAMMDAAAAAAAAwwMAAAAAAAABAAAAQcMDAAAAAAAAywMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQDAAAAAAAAxAMAAAAAAAAAAAAAAADwvw"
				],
				[
					534,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMwDAAAAAAAAzQMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwDAAAAAAAAzAMAAAAAAAAAAAAAAADwvw"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0DAAAAAAAAzgMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0DAAAAAAAAzQMAAAAAAAAAAAAAAADwvw"
				],
				[
					538,
					2,
					"left_delete",
					null,
					"AgAAAM0DAAAAAAAAzQMAAAAAAAABAAAAIMwDAAAAAAAAzAMAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4DAAAAAAAAzgMAAAAAAAAAAAAAAADwvw"
				],
				[
					541,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwDAAAAAAAAzAMAAAAAAAAAAAAAAADwvw"
				],
				[
					543,
					4,
					"left_delete",
					null,
					"BAAAANoDAAAAAAAA2gMAAAAAAAABAAAAc9kDAAAAAAAA2QMAAAAAAAABAAAAc9gDAAAAAAAA2AMAAAAAAAABAAAAYdcDAAAAAAAA1wMAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsDAAAAAAAA2wMAAAAAAAAAAAAAACByQA"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "self.at"
					},
					"BwAAANcDAAAAAAAA2AMAAAAAAAAAAAAA2AMAAAAAAADZAwAAAAAAAAAAAADZAwAAAAAAANoDAAAAAAAAAAAAANoDAAAAAAAA2wMAAAAAAAAAAAAA2wMAAAAAAADcAwAAAAAAAAAAAADcAwAAAAAAAN0DAAAAAAAAAAAAAN0DAAAAAAAA3gMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcDAAAAAAAA1wMAAAAAAAAAAAAAAADwvw"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": "trs"
					},
					"AwAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA3wMAAAAAAADgAwAAAAAAAAAAAADgAwAAAAAAAOEDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4DAAAAAAAA3gMAAAAAAAAAAAAAAADwvw"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA4gMAAAAAAADjAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEDAAAAAAAA4QMAAAAAAAAAAAAAAADwvw"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": " attrs"
					},
					"BgAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADlAwAAAAAAAAAAAADlAwAAAAAAAOYDAAAAAAAAAAAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMDAAAAAAAA4wMAAAAAAAAAAAAAAADwvw"
				],
				[
					550,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkDAAAAAAAA6QMAAAAAAAAAAAAAAADwvw"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACgAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsDAAAAAAAAmwMAAAAAAAAAAAAAAGBhQA"
				],
				[
					561,
					1,
					"paste",
					null,
					"AQAAAKADAAAAAAAAuQMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKADAAAAAAAAoAMAAAAAAAAAAAAAAADwvw"
				],
				[
					564,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkDAAAAAAAAuQMAAAAAAAAAAAAAAADwvw"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "\nse"
					},
					"BAAAAAgEAAAAAAAACQQAAAAAAAAAAAAACQQAAAAAAAARBAAAAAAAAAAAAAARBAAAAAAAABIEAAAAAAAAAAAAABIEAAAAAAAAEwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAOBlQA"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "lf."
					},
					"AwAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABYEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMEAAAAAAAAEwQAAAAAAAAAAAAAAADwvw"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "set"
					},
					"AwAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABkEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYEAAAAAAAAFgQAAAAAAAAAAAAAAADwvw"
				],
				[
					570,
					1,
					"left_delete",
					null,
					"AQAAAAkEAAAAAAAACQQAAAAAAAARAAAAICAgICAgICBzZWxmLnNldAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkEAAAAAAAAGgQAAAAAAAAAAAAAAADwvw"
				],
				[
					573,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkEAAAAAAAACQQAAAAAAAAAAAAAAADwvw"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoDAAAAAAAAmgMAAAAAAAAAAAAAAADwvw"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": "wr"
					},
					"AgAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACdAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsDAAAAAAAAmwMAAAAAAAAAAAAAAADwvw"
				],
				[
					580,
					1,
					"insert_completion",
					{
						"completion": "writeable",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "writeable"
					},
					"AgAAAJsDAAAAAAAAmwMAAAAAAAACAAAAd3KbAwAAAAAAAKQDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0DAAAAAAAAnQMAAAAAAAAAAAAAAADwvw"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": ".Su"
					},
					"AwAAAKQDAAAAAAAApQMAAAAAAAAAAAAApQMAAAAAAACmAwAAAAAAAAAAAACmAwAAAAAAAKcDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQDAAAAAAAApAMAAAAAAAAAAAAAAADwvw"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAKcDAAAAAAAAqAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcDAAAAAAAApwMAAAAAAAAAAAAAAADwvw"
				],
				[
					583,
					1,
					"insert_completion",
					{
						"completion": "subscribe($0)",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "subscribe()"
					},
					"AgAAAKUDAAAAAAAApQMAAAAAAAADAAAAU3VipQMAAAAAAACwAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgDAAAAAAAAqAMAAAAAAAAAAAAAAADwvw"
				],
				[
					585,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAK8DAAAAAAAArwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8DAAAAAAAArwMAAAAAAAAAAAAAAADwvw"
				],
				[
					586,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAK4DAAAAAAAArgMAAAAAAAABAAAAKK4DAAAAAAAArgMAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8DAAAAAAAArwMAAAAAAAAAAAAAAADwvw"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAK4DAAAAAAAArwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4DAAAAAAAArgMAAAAAAAAAAAAAAADwvw"
				],
				[
					590,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8DAAAAAAAArwMAAAAAAAAAAAAAAADwvw"
				],
				[
					595,
					1,
					"left_delete",
					null,
					"AQAAAGIDAAAAAAAAYgMAAAAAAAABAAAAVA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMDAAAAAAAAYwMAAAAAAAAAAAAAAADwvw"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAGIDAAAAAAAAYwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIDAAAAAAAAYgMAAAAAAAAAAAAAAADwvw"
				],
				[
					599,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMDAAAAAAAAYwMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "src/taktk/writeable.py",
			"settings":
			{
				"buffer_size": 9928,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					2,
					"left_delete",
					null,
					"AgAAACwBAAAAAAAALAEAAAAAAAASAAAAZnJvbSAuIGltcG9ydCBOaWwKKwEAAAAAAAArAQAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACbAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAwAAAAAAAI4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAAJcDAAAAAAAAlwMAAAAAAAAEAAAAICAgIJMDAAAAAAAAkwMAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAwAAAAAAAJsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\ndef"
					},
					"BgAAAJMDAAAAAAAAlAMAAAAAAAAAAAAAlAMAAAAAAACYAwAAAAAAAAAAAACPAwAAAAAAAI8DAAAAAAAABAAAACAgICCUAwAAAAAAAJUDAAAAAAAAAAAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAwAAAAAAAJMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " unsubscrib"
					},
					"CwAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAACZAwAAAAAAAJoDAAAAAAAAAAAAAJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAKADAAAAAAAAoQMAAAAAAAAAAAAAoQMAAAAAAACiAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAwAAAAAAAJcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "e_all"
					},
					"BQAAAKIDAAAAAAAAowMAAAAAAAAAAAAAowMAAAAAAACkAwAAAAAAAAAAAACkAwAAAAAAAKUDAAAAAAAAAAAAAKUDAAAAAAAApgMAAAAAAAAAAAAApgMAAAAAAACnAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAwAAAAAAAKIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKcDAAAAAAAAqQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAwAAAAAAAKcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BAAAAKgDAAAAAAAAqQMAAAAAAAAAAAAAqQMAAAAAAACqAwAAAAAAAAAAAACqAwAAAAAAAKsDAAAAAAAAAAAAAKsDAAAAAAAArAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAwAAAAAAAKgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAK0DAAAAAAAArgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAwAAAAAAAK0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACzAwAAAAAAAAAAAACzAwAAAAAAALcDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAwAAAAAAAK4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALcDAAAAAAAAuQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AwAAAAAAALcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\"\"\"\""
					},
					"BAAAALkDAAAAAAAAugMAAAAAAAAAAAAAugMAAAAAAAC7AwAAAAAAAAAAAAC7AwAAAAAAALwDAAAAAAAAAAAAALwDAAAAAAAAvQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AwAAAAAAALkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "Unsubsci"
					},
					"CAAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAC/AwAAAAAAAMADAAAAAAAAAAAAAMADAAAAAAAAwQMAAAAAAAAAAAAAwQMAAAAAAADCAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AwAAAAAAALoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "be"
					},
					"AgAAAMIDAAAAAAAAwwMAAAAAAAAAAAAAwwMAAAAAAADEAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAwAAAAAAAMIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " all"
					},
					"BAAAAMQDAAAAAAAAxQMAAAAAAAAAAAAAxQMAAAAAAADGAwAAAAAAAAAAAADGAwAAAAAAAMcDAAAAAAAAAAAAAMcDAAAAAAAAyAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAwAAAAAAAMQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " subscr"
					},
					"BwAAAMgDAAAAAAAAyQMAAAAAAAAAAAAAyQMAAAAAAADKAwAAAAAAAAAAAADKAwAAAAAAAMsDAAAAAAAAAAAAAMsDAAAAAAAAzAMAAAAAAAAAAAAAzAMAAAAAAADNAwAAAAAAAAAAAADNAwAAAAAAAM4DAAAAAAAAAAAAAM4DAAAAAAAAzwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAwAAAAAAAMgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "ibed"
					},
					"BAAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA0AMAAAAAAADRAwAAAAAAAAAAAADRAwAAAAAAANIDAAAAAAAAAAAAANIDAAAAAAAA0wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAwAAAAAAAM8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " sub"
					},
					"BAAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAADVAwAAAAAAANYDAAAAAAAAAAAAANYDAAAAAAAA1wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAwAAAAAAANMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "scribeab"
					},
					"CAAAANcDAAAAAAAA2AMAAAAAAAAAAAAA2AMAAAAAAADZAwAAAAAAAAAAAADZAwAAAAAAANoDAAAAAAAAAAAAANoDAAAAAAAA2wMAAAAAAAAAAAAA2wMAAAAAAADcAwAAAAAAAAAAAADcAwAAAAAAAN0DAAAAAAAAAAAAAN0DAAAAAAAA3gMAAAAAAAAAAAAA3gMAAAAAAADfAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAwAAAAAAANcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "les"
					},
					"AwAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAADhAwAAAAAAAOIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAwAAAAAAAN8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAwAAAAAAAOIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADvAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAwAAAAAAAOYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAwAAAAAAAO8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADvAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAwAAAAAAAOYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA8AMAAAAAAADxAwAAAAAAAAAAAADxAwAAAAAAAPIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAwAAAAAAAO8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " subsc"
					},
					"BgAAAPIDAAAAAAAA8wMAAAAAAAAAAAAA8wMAAAAAAAD0AwAAAAAAAAAAAAD0AwAAAAAAAPUDAAAAAAAAAAAAAPUDAAAAAAAA9gMAAAAAAAAAAAAA9gMAAAAAAAD3AwAAAAAAAAAAAAD3AwAAAAAAAPgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAwAAAAAAAPIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert_completion",
					{
						"completion": "subscriber",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "subscriber"
					},
					"AgAAAPMDAAAAAAAA8wMAAAAAAAAFAAAAc3Vic2PzAwAAAAAAAP0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AwAAAAAAAPgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0DAAAAAAAA/gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AwAAAAAAAP0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMgFAAAAAAAAyQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIBQAAAAAAAMgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " self"
					},
					"BQAAAMkFAAAAAAAAygUAAAAAAAAAAAAAygUAAAAAAADLBQAAAAAAAAAAAADLBQAAAAAAAMwFAAAAAAAAAAAAAMwFAAAAAAAAzQUAAAAAAAAAAAAAzQUAAAAAAADOBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJBQAAAAAAAMkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAP0DAAAAAAAA/QMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOBQAAAAAAAM4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "\n_s"
					},
					"BAAAAIABAAAAAAAAgQEAAAAAAAAAAAAAgQEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAIYBAAAAAAAAhwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAQAAAAAAAIABAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAIcBAAAAAAAAiAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAQAAAAAAAIcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAIcBAAAAAAAAhwEAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAQAAAAAAAIgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "ubscri"
					},
					"BgAAAIcBAAAAAAAAiAEAAAAAAAAAAAAAiAEAAAAAAACJAQAAAAAAAAAAAACJAQAAAAAAAIoBAAAAAAAAAAAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAQAAAAAAAIcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "bers"
					},
					"BAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAJABAAAAAAAAkQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAQAAAAAAAI0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "_obj"
					},
					"BAAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAACTAQAAAAAAAJQBAAAAAAAAAAAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRAQAAAAAAAJEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "ects"
					},
					"BAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAQAAAAAAAJUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJkBAAAAAAAAmgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAQAAAAAAAJkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " set"
					},
					"BAAAAJoBAAAAAAAAmwEAAAAAAAAAAAAAmwEAAAAAAACcAQAAAAAAAAAAAACcAQAAAAAAAJ0BAAAAAAAAAAAAAJ0BAAAAAAAAngEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAQAAAAAAAJoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJ4BAAAAAAAAoAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAQAAAAAAAJ4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "Subs"
					},
					"BAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAQAAAAAAAJ8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert_completion",
					{
						"completion": "Subscriber",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Subscriber"
					},
					"AgAAAJ8BAAAAAAAAnwEAAAAAAAAEAAAAU3Vic58BAAAAAAAAqQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAQAAAAAAAKMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKoBAAAAAAAArAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAQAAAAAAAKoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAKsBAAAAAAAAqwEAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAQAAAAAAAKwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAIwBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAQAAAAAAAIwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAIwBAAAAAAAAjAEAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAQAAAAAAAI0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAJsBAAAAAAAAnAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "class Create_Enum_Component(Instruction):\n    \"\"\"\n    create_Component instruction to create a new widget\n    :param name: The widget name\n    :param params: The widget parameters\n    \"\"\"\n\n    object_name: str\n    alias: tuple[str, str]\n    parent: \"Optional[Instruction]\"\n    children: list[Instruction]\n    computed: bool = False\n\n    def __init__(\n        self,\n        name: str,\n        alias: tuple[str, str] = None,\n        parent: \"Optional[Instruction]\" = None,\n    ):\n        self.object_name = name\n        self.alias = alias\n        self.parent = parent\n        self.children = []\n        if parent:\n            parent.children.append(self)\n\n    @classmethod\n    def next(cls, _state, parent: \"Optional[Instruction]\" = None):\n        \"\"\"\n        Gets the next Create_Component instruction\n        \"\"\"\n        state, name, alias = parser.next_enum(_state)\n        _state |= state\n        return cls(name=name, alias=alias, parent=parent)\n\n    def _eval(self, namespace: writeable.Namespace):\n        from ..writeable import NamespaceWriteable\n\n        parent = self.parent\n        self.component = EnumComponent(\n            parent=parent.component,\n            namespace=namespace,\n            object=NamespaceWriteable(namespace, self.object_name),\n            instructions=self.children,\n            alias=self.alias,\n        )\n        self.computed = True\n        return self.component\n\n    def eval(*__, **_):\n        raise NotImplementedError()\n\n\nclass Create_If_Component(Instruction):\n    \"\"\"\n    create_Component instruction to create a new widget\n    :param name: The widget name\n    :param params: The widget parameters\n    \"\"\"\n\n    condition: str\n    alias: tuple[str, str]\n    parent: \"Optional[Instruction]\"\n    children: list[Instruction]\n    computed: bool = False\n\n    def __init__(\n        self,\n        condition: str,\n        parent: \"Optional[Instruction]\" = None,\n    ):\n        self.condition = condition\n        self.parent = parent\n        self.children = []\n        if parent:\n            parent.children.append(self)\n\n    @classmethod\n    def next(cls, _state, parent: \"Optional[Instruction]\" = None):\n        \"\"\"\n        Gets the next Create_If_Component instruction\n        \"\"\"\n        state, condition = parser.next_if(_state)\n        _state |= state\n        return cls(condition=condition, parent=parent)\n\n    def _eval(self, namespace: writeable.Namespace):\n        parent = self.parent\n        self.component = IfComponent(\n            parent=parent.component,\n            namespace=namespace,\n            condition=Expression(namespace, self.condition),\n            instructions=self.children,\n        )\n        self.computed = True\n        return self.component\n\n    def eval(*__, **_):\n        raise NotImplementedError()\n\n\ndef parse_subinstructions(parent, lines, begin, indent, offset):\n    base_ind = -1\n    last_component = None\n    target_idx = 0\n    line_idx = 0\n    for line_idx, line in enumerate(lines):\n        if line_idx < max(target_idx, begin):\n            continue\n        if not line.strip():\n            continue\n        if indent == -1:\n            indent = len(line) - len(line.lstrip())\n        if base_ind == -1:\n            base_ind = (len(line) - len(line.lstrip())) // indent\n        if line.strip().startswith(\"#\"):\n            continue\n        ind = len(line) - len(line.lstrip())\n        if ind % indent != 0:\n            raise ValueError(\"Unexpected indent\", line)\n        ind = ind // indent\n        if ind < base_ind:\n            return (line_idx - 1, parent)\n        elif ind > base_ind:\n            target_idx, _w = parse_subinstructions(\n                last_component, lines, line_idx, indent, offset\n            )\n            target_idx += 1\n            continue\n        else:\n            instr = line.strip()\n            if instr[0] == \"\\\\\":\n                last_component = Create_Component.next(\n                    parser.State(line, ind * 2), parent=parent\n                )\n            elif instr[0] == \"!\":\n                if instr.startswith(\"!enum\"):\n                    last_component = Create_Enum_Component.next(\n                        parser.State(line, ind * 2), parent=parent\n                    )\n                elif instr.startswith(\"!if\"):\n                    last_component = Create_If_Component.next(\n                        parser.State(line, ind * 2), parent=parent\n                    )\n                else:\n                    raise ValueError(\"unknown special tag:\", instr)\n            else:\n                raise ValueError(\"unknown tag:\", instr)\n    return (line_idx, parent)\n\n\ndef execute(text):\n    lines = list(filter(lambda l: bool(l.strip()), text.splitlines()))\n    for idx, line in reversed(tuple(enumerate(lines[:]))):\n        if line.endswith(\"\\\\\") and idx + 1 < len(lines):\n            pre, post = lines[idx : idx + 2]\n            lines[idx : idx + 2] = [pre[:-1] + \" \" + post.lstrip()]\n    offset = min(len(line) - len(line.lstrip(\" \")) for line in lines)\n    lines = [line[offset:] for line in lines]\n    line, *lines = lines\n    indent = -1\n    while not line.startswith(\"\\\\\"):\n        if not line.strip() or line[0] == \"#\":\n            line, *lines = lines\n            continue\n        elif line[0].isspace():\n            raise ValueError(\"Unallowed space in line:\", line)\n        elif c == \"@\":\n            if line.startswith(\"@indent\"):\n                indent = int(line.split(\" \")[1])\n                line, lines = lines\n            else:\n                raise ValueError(\"Unrecognised meta parameter:\", line)\n        else:\n            raise ValueError(\"Error parsing line\", line)\n    master = Create_Component.next(parser.State(line, 0))\n    _, instr = parse_subinstructions(\n        master,\n        lines,\n        0,\n        indent=indent,\n        offset=offset,\n    )\n    return instr\n\n\n###############################################################################",
			"settings":
			{
				"buffer_size": 5898,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAChcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "src/taktk/template.py",
			"settings":
			{
				"buffer_size": 18764,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					708,
					1,
					"cut",
					null,
					"AQAAANRIAAAAAAAA1EgAAAAAAAAQAAAAdmFycyhjb21wb25lbnRzKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANRIAAAAAAAA5EgAAAAAAAAAAAAAAADwvw"
				],
				[
					710,
					2,
					"left_delete",
					null,
					"AgAAANRIAAAAAAAA1EgAAAAAAAABAAAALNNIAAAAAAAA00gAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANVIAAAAAAAA1UgAAAAAAAAAAAAAAADwvw"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAANNIAAAAAAAA1EgAAAAAAAAAAAAA1EgAAAAAAADVSAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANNIAAAAAAAA00gAAAAAAAAAAAAAAADwvw"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANNIAAAAAAAA1EgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANNIAAAAAAAA00gAAAAAAAAAAAAAAADwvw"
				],
				[
					714,
					1,
					"paste",
					null,
					"AQAAANRIAAAAAAAA5EgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANRIAAAAAAAA1EgAAAAAAAAAAAAAAADwvw"
				],
				[
					717,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAORIAAAAAAAA5EgAAAAAAAAAAAAAAADwvw"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOdIAAAAAAAA6EgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOdIAAAAAAAA50gAAAAAAAAAAAAAAADwvw"
				],
				[
					722,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPhIAAAAAAAA+UgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPhIAAAAAAAA+EgAAAAAAAAAAAAAAADwvw"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": ".var"
					},
					"BAAAAPFIAAAAAAAA8kgAAAAAAAAAAAAA8kgAAAAAAADzSAAAAAAAAAAAAADzSAAAAAAAAPRIAAAAAAAAAAAAAPRIAAAAAAAA9UgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPFIAAAAAAAA8UgAAAAAAAAAAAAAAADwvw"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPVIAAAAAAAA9kgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPVIAAAAAAAA9UgAAAAAAAAAAAAAAADwvw"
				],
				[
					728,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA/0gAAAAAAAD/SAAAIiIiClRha3RrIHRlbXBsYXRpbmcgZW5naW5lLgoKQ29weXJpZ2h0IChDKSAyMDIyICBrZW4tbW9yZWwKClRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Cml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yCihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCgpUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQpHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgoKWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgoiIiIKaW1wb3J0IGRhdGFjbGFzc2VzCmltcG9ydCBkZWNpbWFsCmltcG9ydCBlbnVtCmltcG9ydCBvcy5wYXRoCmltcG9ydCBzdHJpbmcKZnJvbSBkZWNpbWFsIGltcG9ydCBEZWNpbWFsCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIHR5cGluZyBpbXBvcnQgT3B0aW9uYWwsIEFueQoKZnJvbSBweW9sb2FkIGltcG9ydCBhbm5vdGF0ZQoKZnJvbSAuIGltcG9ydCBkaWN0aW9uYXJ5LCB3cml0ZWFibGUsIGNvbXBvbmVudAoKCmNsYXNzIFRhZ1R5cGUoZW51bS5FbnVtKToKICAgICIiIkVudW0gdHlwZSBmb3IgVGVtcGxhdGUuSXRlbSBgLnR5cGVgLiIiIgoKICAgIFRBRyA9IGVudW0uYXV0bygpCiAgICBTUEVDSUFMID0gZW51bS5hdXRvKCkKICAgIE1FVEEgPSBlbnVtLmF1dG8oKQoKClNQQUNFID0gZnJvemVuc2V0KCIgIikKVkFSTkFNRSA9IGZyb3plbnNldChzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMgKyAiXyIpCkNPTVBPTkVOVF9OQU1FID0gVkFSTkFNRSB8IGZyb3plbnNldCgiLiIpCkJSQUNLRVRTID0gZGljdChtYXAodHVwbGUsICIoKSxbXSx7fSIuc3BsaXQoIiwiKSkpClNUUklOR19RVU9URVMgPSBmcm96ZW5zZXQoIlwiJyIpCklOVCA9IGZyb3plbnNldChzdHJpbmcuZGlnaXRzKQpERUNJTUFMID0gZnJvemVuc2V0KHN0cmluZy5kaWdpdHMgKyAiLiIpClNMSUNFID0gSU5UIHwgZnJvemVuc2V0KCI6IikKUE9JTlQgPSBERUNJTUFMIHwgZnJvemVuc2V0KCIsIikKQVRUUl9OQU1FID0gZnJvemVuc2V0KCI6IikgfCBWQVJOQU1FCgoKY2xhc3MgU3RhdGU6CiAgICAiIiJTdG9yZXMgcGFyc2VyIHN0YXRlIGFuZCBwYXJzaW5nIHV0aWxzLiIiIgoKICAgIF9fc2xvdHNfXyA9ICgidGV4dCIsICJpZHgiKQogICAgdGV4dDogc3RyCiAgICBpZHg6IGludAoKICAgIEBhbm5vdGF0ZQogICAgZGVmIF9faW5pdF9fKHNlbGYsIHRleHQ6IHN0ciwgaWR4OiBpbnQgPSAwKToKICAgICAgICAiIiJJbml0aWFsaXplIHRoZSBwYXJzZXIgc3RhdGUuIiIiCiAgICAgICAgc2VsZi50ZXh0ID0gdGV4dAogICAgICAgIHNlbGYuaWR4ID0gaWR4CgogICAgZGVmIF9faW9yX18oc2VsZiwgb3RoZXI6ICJTdGF0ZSIpOgogICAgICAgICIiIkNvcHkgdGhlIG90aGVyIHN0YXRlIG9iamVjdC4iIiIKICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShvdGhlciwgU3RhdGUpOgogICAgICAgICAgICByZXR1cm4gTm90SW1wbGVtZW50ZWQKICAgICAgICBzZWxmLmlkeCA9IG90aGVyLmlkeAogICAgICAgIHJldHVybiBzZWxmCgogICAgZGVmIGNvcHkoc2VsZikgLT4gIlN0YXRlIjoKICAgICAgICAiIiJDb3B5IHRoZSBzdGF0ZSBvYmplY3QuIiIiCiAgICAgICAgcmV0dXJuIFN0YXRlKHRleHQ9c2VsZi50ZXh0LCBpZHg9c2VsZi5pZHgpCgogICAgZGVmIF9faW50X18oc2VsZikgLT4gaW50OgogICAgICAgICIiIkNvbnZlcnQgc3RhdGUgdG8gaW50LCByZXR1cm4gaW5kZXguIiIiCiAgICAgICAgcmV0dXJuIHNlbGYuaWR4CgogICAgZGVmIF9faW5kZXhfXyhzZWxmKSAtPiBpbnQ6CiAgICAgICAgIiIiVXNlIHN0YXRlIGFzIGluZGV4LCByZXR1cm4gaW5kZXguIiIiCiAgICAgICAgcmV0dXJuIHNlbGYuaWR4CgogICAgZGVmIF9faWFkZF9fKHNlbGYsIHZhbCkgLT4gIlN0YXRlIjoKICAgICAgICAiIiJBZGQgc3RhdGUgaW5kZXguIiIiCiAgICAgICAgc2VsZi5pZHggKz0gdmFsCiAgICAgICAgcmV0dXJuIHNlbGYKCiAgICBkZWYgX19hZGRfXyhzZWxmLCB2YWwpIC0+IGludDoKICAgICAgICAiIiJBZGQgc3RhdGVzLiIiIgogICAgICAgIHJldHVybiBzZWxmLmlkeCArIHZhbAoKICAgIGRlZiBfX3JhZGRfXyhzZWxmLCB2YWwpIC0+IGludDoKICAgICAgICAiIiJBZGQgc3RhdGVzLiIiIgogICAgICAgIHJldHVybiBzZWxmLmlkeCArIHZhbAoKICAgIGRlZiBfX2d0X18oc2VsZiwgdmFsOiBpbnQpIC0+IGJvb2w6CiAgICAgICAgIiIiUGVyZm9ybSBndCBvcGVyYXRpb24gb24gc3RhdGUgaW5kZXguIiIiCiAgICAgICAgcmV0dXJuIGludC5fX2d0X18oc2VsZi5pZHgsIHZhbCkKCiAgICBkZWYgX19sdF9fKHNlbGYsIHZhbDogaW50KSAtPiBib29sOgogICAgICAgICIiIlBlcmZvcm0gbHQgb3BlcmF0aW9uIG9uIHN0YXRlIGluZGV4LiIiIgogICAgICAgIHJldHVybiBpbnQuX19sdF9fKHNlbGYuaWR4LCB2YWwpCgogICAgZGVmIF9faGFzaF9fKHNlbGYpIC0+IGludDoKICAgICAgICAiIiJDb21wdXRlIGEgZHVtbXkgaGFzaCBiYXNlZCBvbiB0ZXh0IGhhc2guIiIiCiAgICAgICAgcmV0dXJuIHNlbGYuaWR4ICogbGVuKHNlbGYudGV4dCkgKiBoYXNoKHNlbGYudGV4dCkKCiAgICBkZWYgX19sZW5fXyhzZWxmKSAtPiBpbnQ6CiAgICAgICAgIiIiQ29tcHV0ZSB0aGUgdGV4dCBsZW5ndGguIiIiCiAgICAgICAgcmV0dXJuIGxlbihzZWxmLnRleHQpCgogICAgZGVmIF9fZ2V0aXRlbV9fKHNlbGYsIGl0ZW06IHNsaWNlIHwgaW50KSAtPiBzdHI6CiAgICAgICAgIiIiU2xpY2UgdGhlIHN0YXRlIHRleHQuIiIiCiAgICAgICAgaWYgaXRlbSA9PSAuLi46CiAgICAgICAgICAgIHJldHVybiBzZWxmLnRleHRbc2VsZi5pZHhdCiAgICAgICAgZWxpZiBpc2luc3RhbmNlKGl0ZW0sIHNsaWNlKToKICAgICAgICAgICAgcmV0dXJuIHNlbGYudGV4dC5fX2dldGl0ZW1fXygKICAgICAgICAgICAgICAgIHNsaWNlKAogICAgICAgICAgICAgICAgICAgICooCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaWR4IGlmIHggaXMgLi4uIGVsc2UgeAogICAgICAgICAgICAgICAgICAgICAgICBmb3IgeCBpbiAoaXRlbS5zdGFydCwgaXRlbS5zdG9wLCBpdGVtLnN0ZXApCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICApCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHNlbGYudGV4dC5fX2dldGl0ZW1fXyhpdGVtKQoKICAgIGRlZiBfX2Jvb2xfXyhzZWxmKSAtPiBib29sOgogICAgICAgICIiIlJldHVybiB0cnVlIGlmIGluZGV4IGRpZCBub3QgZXhjZWVkIHRleHQgbGVuZ3RoLiIiIgogICAgICAgIHJldHVybiBzZWxmLmlkeCA8IGxlbihzZWxmLnRleHQpCgogICAgZGVmIG5leHRfbGluZShzZWxmKSAtPiBib29sOgogICAgICAgICIiIlNraXAgYWxsIGNoYXJhY3RlcnMgdGlsbCBuZXh0IG5ld2xpbmUgY2hhcmFjdGVyLiIiIgogICAgICAgIHdoaWxlIHNlbGYgYW5kIHNlbGZbLi4uXSAhPSAiXG4iOgogICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICBzZWxmICs9IDEKICAgICAgICByZXR1cm4gYm9vbChzZWxmKQoKICAgIGRlZiBza2lwX3NwYWNlcyhzZWxmKSAtPiBpbnQ6CiAgICAgICAgIiIiU2tpcCBhbGwgc3BhY2VzIGFuZCByZXR1cm4gdGhlaXIgbnVtYmVyLiIiIgogICAgICAgIGNvdW50ID0gMAogICAgICAgIHdoaWxlIHNlbGYgYW5kIHNlbGZbLi4uXSBpbiBTUEFDRToKICAgICAgICAgICAgc2VsZiArPSAxCiAgICAgICAgICAgIGNvdW50ICs9IDEKICAgICAgICBpZiAoCiAgICAgICAgICAgIHNlbGYKICAgICAgICAgICAgYW5kIHNlbGZbc2VsZi5pZHhdID09ICJcXCIKICAgICAgICAgICAgYW5kIGxlbihzZWxmKSA+IHNlbGYuaWR4ICsgMQogICAgICAgICAgICBhbmQgc2VsZltzZWxmLmlkeCArIDFdID09ICJcbiIKICAgICAgICApOgogICAgICAgICAgICBzZWxmICs9IDIKICAgICAgICAgICAgcmV0dXJuIGNvdW50ICsgc2VsZi5za2lwX3NwYWNlcygpCiAgICAgICAgcmV0dXJuIGNvdW50CgogICAgZGVmIG5leHRfdGFnX25hbWUoc2VsZikgLT4gdHVwbGVbc3RyLCBPcHRpb25hbFtzdHJdXToKICAgICAgICByIiIiR2V0IG5leHQgdGFnIG5hbWUgZnJvbSBgXGAgY2hhcmFjdGVyLCBtYXkgaW5jbHVkZSBhbGlhcy4iIiIKICAgICAgICBzZWxmLnNraXBfc3BhY2VzKCkKICAgICAgICBiZWdpbiA9IHNlbGYuY29weSgpCiAgICAgICAgc2VsZiArPSAxCiAgICAgICAgbmFtZSA9ICIiCiAgICAgICAgd2hpbGUgc2VsZiBhbmQgc2VsZlsuLi5dIGluIENPTVBPTkVOVF9OQU1FOgogICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICBuYW1lID0gc2VsZi50ZXh0W2JlZ2luICsgMSA6IHNlbGZdCgogICAgICAgIGlmIGxlbihzZWxmLnRleHQpID4gc2VsZiBhbmQgc2VsZi50ZXh0W3NlbGZdID09ICI6IjoKICAgICAgICAgICAgc2VsZiArPSAxCiAgICAgICAgICAgIGJlZ2luID0gc2VsZi5jb3B5KCkKICAgICAgICAgICAgd2hpbGUgKAogICAgICAgICAgICAgICAgbGVuKHNlbGYudGV4dCkgPiBpbnQoc2VsZikKICAgICAgICAgICAgICAgIGFuZCBzZWxmLnRleHRbaW50KHNlbGYpXSBpbiBDT01QT05FTlRfTkFNRQogICAgICAgICAgICApOgogICAgICAgICAgICAgICAgc2VsZiArPSAxCiAgICAgICAgICAgIGFsaWFzID0gc2VsZi50ZXh0W2JlZ2luIDogaW50KHNlbGYpXQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGFsaWFzID0gTm9uZQogICAgICAgIHJldHVybiAobmFtZSwgYWxpYXMpCgogICAgZGVmIG5leHRfYXR0cl92YWx1ZShzZWxmKSAtPiAidHVwbGVbU3RhdGUsIHN0ciwgc3RyXSI6CiAgICAgICAgciIiIkdldCBuZXh0IGF0dHJpYnV0ZSB2YWx1ZSBwYWlyLiIiIgogICAgICAgIHNlbGYuc2tpcF9zcGFjZXMoKQogICAgICAgIGF0dHIgPSAiIgoKICAgICAgICB3aGlsZSBzZWxmIGFuZCBzZWxmWy4uLl0gaW4gQVRUUl9OQU1FOgogICAgICAgICAgICBhdHRyICs9IHNlbGZbLi4uXQogICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICBpZiBub3Qgc2VsZiBvciBzZWxmWy4uLl0gIT0gIj0iOgogICAgICAgICAgICByZXR1cm4gYXR0ciwgIlRydWUiCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZiArPSAxCiAgICAgICAgICAgIHZhbCA9IHNlbGYubmV4dF92YWx1ZSgpCiAgICAgICAgICAgIHJldHVybiBhdHRyLCB2YWwKCiAgICBkZWYgbmV4dF92YWx1ZShzZWxmKSAtPiBzdHI6CiAgICAgICAgIiIiUmVhZCB0aGUgbmV4dCB2YWx1ZSBpbiBwYXJzZXIuIiIiCiAgICAgICAgc2VsZi5za2lwX3NwYWNlcygpCiAgICAgICAgYmVnaW4gPSBzZWxmLmNvcHkoKQogICAgICAgIGJyYWNrZXRzID0gW10KICAgICAgICBpZiAoCiAgICAgICAgICAgICI6IiBpbiBzZWxmWy4uLjpdCiAgICAgICAgICAgIGFuZCBzZWxmWy4uLjpdWzogKG4gOj0gc2VsZlsuLi46XS5pbmRleCgiOiIpKV0uaXNhbHBoYSgpCiAgICAgICAgICAgIGFuZCBsZW4oYnJhY2tldHMpID09IDAKICAgICAgICApOgogICAgICAgICAgICBiZWdpbiA9IHNlbGYuY29weSgpCiAgICAgICAgICAgIHNlbGYgKz0gbgogICAgICAgICAgICBiYyA9IDAKICAgICAgICAgICAgd2hpbGUgc2VsZjoKICAgICAgICAgICAgICAgIGlmIHNlbGZbLi4uXSA9PSAieyI6CiAgICAgICAgICAgICAgICAgICAgYmMgKz0gMQogICAgICAgICAgICAgICAgZWxpZiBzZWxmWy4uLl0gPT0gIn0iOgogICAgICAgICAgICAgICAgICAgIGJjIC09IDEKICAgICAgICAgICAgICAgIGVsaWYgKHF1b3RlIDo9IHNlbGZbLi4uXSkgaW4gU1RSSU5HX1FVT1RFUzoKICAgICAgICAgICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICAgICAgICAgICAgICB3aGlsZSBzZWxmOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBzZWxmWy4uLl0gPT0gcXVvdGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIHNlbGZbLi4uXSA9PSAiXFwiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZiArPSAyCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidW50ZXJtaW5hdGVkIHN0cmluZyBpbjoiLCByZXByKHNlbGYudGV4dCkKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZWxpZiBzZWxmWy4uLl0uaXNzcGFjZSgpIGFuZCBiYyA9PSAwOgogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICAgICAgcmV0dXJuIHNlbGZbYmVnaW46Li4uXQogICAgICAgIHdoaWxlIHNlbGY6CiAgICAgICAgICAgIGMgPSBzZWxmWy4uLl0KICAgICAgICAgICAgaWYgYyBpbiBCUkFDS0VUUzoKICAgICAgICAgICAgICAgIGJyYWNrZXRzLmFwcGVuZChzZWxmWy4uLl0pCiAgICAgICAgICAgIGVsaWYgYyBpbiBTVFJJTkdfUVVPVEVTOgogICAgICAgICAgICAgICAgb3BlbmluZyA9IGMKICAgICAgICAgICAgICAgIHNlbGYgKz0gMQogICAgICAgICAgICAgICAgd2hpbGUgc2VsZjoKICAgICAgICAgICAgICAgICAgICBpZiBzZWxmWy4uLl0gPT0gb3BlbmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICBlbGlmIHNlbGZbLi4uXSA9PSAiXFwiOgogICAgICAgICAgICAgICAgICAgICAgICBzZWxmICs9IDIKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBzZWxmICs9IDEKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJ1bnRlcm1pbmF0ZWQgc3RyaW5nIGluOiIsIHJlcHIoc2VsZi50ZXh0KSkKICAgICAgICAgICAgZWxpZiBjIGluIEJSQUNLRVRTLnZhbHVlcygpOgogICAgICAgICAgICAgICAgaWYgbGVuKGJyYWNrZXRzKSA+IDAgYW5kIEJSQUNLRVRTW2JyYWNrZXRzWy0xXV0gPT0gYzoKICAgICAgICAgICAgICAgICAgICBicmFja2V0cy5wb3AoKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIGYidW5tYXRjaGVkIHtjIXJ9IGF0IHtpbnQoc2VsZil9OiB7c2VsZi50ZXh0IXJ9IgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgZWxpZiBsZW4oYnJhY2tldHMpID09IDAgYW5kIGMuaXNzcGFjZSgpOgogICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgc2VsZiArPSAxCiAgICAgICAgcmV0dXJuIHNlbGZbYmVnaW46Li4uXQoKICAgIGRlZiBuZXh0X2VudW0oc2VsZikgLT4gInR1cGxlW3N0ciwgdHVwbGVbc3RyLCBzdHJdXSI6CiAgICAgICAgIiIiTmV4dCBlbnVtZXJhdG9yLiIiIgogICAgICAgIGJlZ2luID0gc2VsZi5jb3B5KCkKICAgICAgICBiZWdpbiB8PSBiZWdpbi5za2lwX3NwYWNlcygpCiAgICAgICAgc3RhdGUgPSBiZWdpbi5jb3B5KCkKICAgICAgICBzdGF0ZSArPSBsZW4oIiFlbnVtICIpCiAgICAgICAgc3RhdGUgfD0gc3RhdGUuc2tpcF9zcGFjZXMoKQogICAgICAgIGIgPSBzdGF0ZS5jb3B5KCkKICAgICAgICB3aGlsZSBzdGF0ZToKICAgICAgICAgICAgaWYgc3RhdGVbLi4uXVswXSBub3QgaW4gVkFSTkFNRToKICAgICAgICAgICAgICAgIGlmIHN0YXRlWy4uLl1bMF0gIT0gIjoiOgogICAgICAgICAgICAgICAgICAgIHJhaXNlIEV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICAgICAgICAgInVucmVjb2duaXNlZCBzeW1ib2wgaW4gYWZ0ZXIgZW51bSBvYmplY3QgbmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLnRleHQsCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgc3RhdGUgKz0gMQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJhaXNlIEV4Y2VwdGlvbigidW50ZXJtaW5hdGVkIGVudW0gZmlyc3QgZmllbGQiLCBzdGF0ZS50ZXh0KQogICAgICAgIG9iaiA9IHN0YXRlLnRleHRbYjpzdGF0ZV0KICAgICAgICBzdGF0ZSArPSAxCiAgICAgICAgYiA9IHN0YXRlLmNvcHkoKQogICAgICAgIGIgKz0gMQogICAgICAgIG5jID0gMAogICAgICAgIHdoaWxlIHN0YXRlOgogICAgICAgICAgICBpZiBzdGF0ZVsuLi5dWzBdID09ICIpIjoKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsaWYgc3RhdGVbLi4uXVswXSA9PSAiLCI6CiAgICAgICAgICAgICAgICBuYyArPSAxCiAgICAgICAgICAgICAgICBpZiBuYyA+IDE6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UgRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICAidG9vIG1hbnkgZmllbGRzIGFmdGVyIGVudW0gb2JqZWN0Iiwgc3RhdGUudGV4dAogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgc3RhdGUgKz0gMQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJhaXNlIEV4Y2VwdGlvbigiVW50ZXJtaW5hdGVkIGVudW0gc2Vjb25kIGZpZWxkIiwgc3RhdGUudGV4dCkKICAgICAgICBhbGlhcyA9IHR1cGxlKG1hcChzdHIuc3RyaXAsIHN0YXRlW2I6c3RhdGVdLnNwbGl0KCIsIikpKQogICAgICAgIHJldHVybiBzdGF0ZSwgb2JqLCBhbGlhcwoKICAgIGRlZiBuZXh0X2lmKHNlbGYpIC0+ICJ0dXBsZVtzdHIsIHR1cGxlW3N0ciwgc3RyXV0iOgogICAgICAgICIiIlJldHVybiBuZXh0IGlmIHN0YXRlbWVudHMgcGFydHMuIiIiCiAgICAgICAgYmVnaW4gPSBzZWxmLmNvcHkoKQogICAgICAgIGJlZ2luIHw9IGJlZ2luLnNraXBfc3BhY2VzKCkKICAgICAgICBzdGF0ZSA9IGJlZ2luLmNvcHkoKQogICAgICAgIHN0YXRlICs9IGxlbigiIWlmICIpCiAgICAgICAgc3RhdGUgfD0gc3RhdGUuc2tpcF9zcGFjZXMoKQogICAgICAgIGIgPSBzdGF0ZS5jb3B5KCkKCiAgICAgICAgd2hpbGUgc3RhdGUgYW5kIHN0YXRlWy4uLl1bMF0gIT0gIlxuIjoKICAgICAgICAgICAgc3RhdGUgKz0gMQoKICAgICAgICByZXR1cm4gc3RhdGUsIHN0YXRlLnRleHRbYjpzdGF0ZV0KCiAgICBAcHJvcGVydHkKICAgIGRlZiByb3coc2VsZikgLT4gaW50OgogICAgICAgICIiIkZpbmQgdGhlIGN1cnJlbnQgcG9zaXRpb24gcm93LiIiIgogICAgICAgIHJldHVybiBzZWxmLnRleHRbOiBzZWxmLmlkeF0uY291bnQoIlxuIikgKyAxCgogICAgQHJvdy5zZXR0ZXIKICAgIGRlZiByb3coc2VsZiwgdmFsOiBpbnQpOgogICAgICAgIGNvbCA9IHNlbGYuY29sCiAgICAgICAgc2VsZi5pZHggPSAwCiAgICAgICAgd2hpbGUgc2VsZi5yb3cgPCB2YWw6CiAgICAgICAgICAgIHNlbGYuaWR4ICs9IDEKICAgICAgICBzZWxmLmNvbCArPSBjb2wKCiAgICBAcHJvcGVydHkKICAgIGRlZiBjb2woc2VsZikgLT4gaW50OgogICAgICAgICIiIkZpbmQgdGhlIGFjdHVhbCBzdGF0ZSBjb2x1bW4uIiIiCiAgICAgICAgbGluZXMgPSBzZWxmLnRleHRbOiBzZWxmLmlkeF0uc3BsaXRsaW5lcygpCiAgICAgICAgaWYgbGVuKGxpbmVzKSA+IDA6CiAgICAgICAgICAgIHJldHVybiBsZW4obGluZXNbLTFdKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiAwCgogICAgQGNvbC5zZXR0ZXIKICAgIGRlZiBjb2woc2VsZiwgdmFsOiBpbnQpIC0+IGJvb2w6CiAgICAgICAgaWYgbGVuKHNlbGYudGV4dC5zcGxpdGxpbmVzKClbc2VsZi5yb3cgLSAxXSkgPCB2YWw6CiAgICAgICAgICAgIHNlbGYuaWR4ICs9IHZhbCAtIHNlbGYuY29sCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHBhcnNlX25leHRfaW5zdHJ1Y3Rpb24oc2VsZikgLT4gInR1cGxlW2ludCwgVGVtcGxhdGUuSXRlbV0iOgogICAgICAgICIiIlBhcnNlIHRoZSBuZXh0IGluc3RydWN0aW9uLiIiIgogICAgICAgIGluZGVudCA9IHNlbGYuc2tpcF9zcGFjZXMoKQogICAgICAgIHdoaWxlIHNlbGYgYW5kIHNlbGZbLi4uXSBpbiAiI1xuIjoKICAgICAgICAgICAgaWYgbm90IHNlbGYubmV4dF9saW5lKCk6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgaW5kZW50ID0gc2VsZi5za2lwX3NwYWNlcygpCiAgICAgICAgaWYgbm90IHNlbGY6CiAgICAgICAgICAgIHJldHVybgogICAgICAgIGNoYXIgPSBzZWxmWy4uLl0KICAgICAgICBpZiBjaGFyID09ICJcXCI6ICAjIGEgdGFnCiAgICAgICAgICAgIHJldHVybiBpbmRlbnQsIHNlbGYucGFyc2VfbmV4dF90YWcoKQogICAgICAgIGVsaWYgY2hhciA9PSAiISI6CiAgICAgICAgICAgIHJldHVybiBpbmRlbnQsIHNlbGYucGFyc2VfbmV4dF9zcGVjaWFsKCkKICAgICAgICBlbHNlOgogICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGNoYXIpCgogICAgZGVmIHBhcnNlX25leHRfdGFnKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgIiIiUmV0dXJuIG5leHQgdGFnLiIiIgogICAgICAgIG5hbWUsIGFsaWFzID0gc2VsZi5uZXh0X3RhZ19uYW1lKCkKICAgICAgICBhdHRycyA9IHt9CiAgICAgICAgd2hpbGUgc2VsZjoKICAgICAgICAgICAgc2VsZi5za2lwX3NwYWNlcygpCiAgICAgICAgICAgIGlmIHNlbGZbLi4uXSA9PSAiIyI6CiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBrZXksIHZhbCA9IHNlbGYubmV4dF9hdHRyX3ZhbHVlKCkKICAgICAgICAgICAgaWYga2V5OgogICAgICAgICAgICAgICAgYXR0cnNba2V5XSA9IHZhbAogICAgICAgICAgICBzZWxmLnNraXBfc3BhY2VzKCkKICAgICAgICAgICAgaWYgbm90IHNlbGYgb3Igc2VsZlsuLi5dID09ICJcbiI6CiAgICAgICAgICAgICAgICBzZWxmLm5leHRfbGluZSgpCiAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICByZXR1cm4gVGVtcGxhdGUuSXRlbSh0eXBlPVRhZ1R5cGUuVEFHLCBuYW1lPW5hbWUsIGFyZ3M9KGFsaWFzLCBhdHRycykpCgogICAgQHByb3BlcnR5CiAgICBkZWYgbGluZShzZWxmKSAtPiBzdHI6CiAgICAgICAgIiIiR2V0IHRoZSBmdWxsIGN1cnJlbnQgbGluZS4iIiIKICAgICAgICByZXR1cm4gc2VsZi50ZXh0LnNwbGl0bGluZXMoKVtzZWxmLnJvdyAtIDFdCgogICAgZGVmIF9fcmVwcl9fKHNlbGYpOgogICAgICAgICIiIlJlcHJvZHVjZSB0aGUgc3RhdGUuIiIiCiAgICAgICAgcmV0dXJuICJTdGF0ZSglZCkge1xuICAgICVzXG4gICAgJXNcbn0iICUgKAogICAgICAgICAgICBzZWxmLnJvdywKICAgICAgICAgICAgc2VsZi5saW5lLAogICAgICAgICAgICAiICIgKiBzZWxmLmNvbCArICJeIiwKICAgICAgICApCgogICAgZGVmIHBhcnNlKHNlbGYpIC0+ICJUZW1wbGF0ZS5JdGVtIjoKICAgICAgICAiIiJQYXJzZSB0aGUgc3RhdGUgY29udGVudC4iIiIKICAgICAgICB0YWdzID0gW10KICAgICAgICB3aGlsZSBzZWxmOgogICAgICAgICAgICBjbWQgPSBzZWxmLnBhcnNlX25leHRfaW5zdHJ1Y3Rpb24oKQogICAgICAgICAgICBpZiBjbWQgaXMgbm90IE5vbmU6CiAgICAgICAgICAgICAgICB0YWdzLmFwcGVuZChjbWQpCiAgICAgICAgaWYgbGVuKHRhZ3MpID09IDA6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgZWxzZToKICAgICAgICAgICAgbGFzdF9pbmRlbnQsIHJvb3QgPSB0YWdzWzBdCiAgICAgICAgICAgIHRyZWUgPSBbXQogICAgICAgICAgICBsYXN0X3RhZyA9IHJvb3QKICAgICAgICAgICAgZm9yIGluZGVudCwgY2hpbGQgaW4gdGFnc1sxOl06CiAgICAgICAgICAgICAgICBpZiBpbmRlbnQgPiBsYXN0X2luZGVudDoKICAgICAgICAgICAgICAgICAgICB0cmVlLmFwcGVuZCgobGFzdF9pbmRlbnQsIGxhc3RfdGFnKSkKICAgICAgICAgICAgICAgIGVsaWYgaW5kZW50IDwgbGFzdF9pbmRlbnQ6CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgaW5kZW50IDw9IHRyZWVbLTFdWzBdOgogICAgICAgICAgICAgICAgICAgICAgICB0cmVlLnBvcCgpCiAgICAgICAgICAgICAgICB0cmVlWy0xXVsxXS5jaGlsZHJlbi5hcHBlbmQoY2hpbGQpCiAgICAgICAgICAgICAgICBjaGlsZC5wYXJlbnQgPSB0cmVlWy0xXVsxXQogICAgICAgICAgICAgICAgbGFzdF9pbmRlbnQgPSBpbmRlbnQKICAgICAgICAgICAgICAgIGxhc3RfdGFnID0gY2hpbGQKICAgICAgICAgICAgcmV0dXJuIHJvb3QKCgpkZWYgZXZhbHVhdGVfbGl0ZXJhbCgKICAgIHN0cmluZzogc3RyLCBuYW1lc3BhY2U6IE9wdGlvbmFsW3dyaXRlYWJsZS5OYW1lc3BhY2VdID0gTm9uZQopIC0+IEFueToKICAgICIiIkV2YWx1YXRlIGEgbGl0dGVyYWwgZnJvbSBzdHJpbmcgYW5kIG9wdGlvbmFsIG5hbWVzcGFjZS4iIiIKICAgIGZyb20gLm1lZGlhIGltcG9ydCBnZXRfbWVkaWEKICAgIGltcG9ydCB0a2ludGVyLmNvbnN0YW50cwoKICAgIHN0cmluZ19zZXQgPSBzZXQoc3RyaW5nKQogICAgaWYgbGVuKHN0cmluZykgPiAxOgogICAgICAgIGIsICpfLCBlID0gc3RyaW5nCiAgICBlbGlmIGxlbihzdHJpbmcpID09IDE6CiAgICAgICAgYiwgZSA9IHN0cmluZywgTm9uZQogICAgZWxzZToKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJlbXB0eSBsaXRlcmFsIHN0cmluZyIpCiAgICBpZiBoYXNhdHRyKHRraW50ZXIuY29uc3RhbnRzLCBzdHJpbmcpOgogICAgICAgIHJldHVybiBnZXRhdHRyKHRraW50ZXIuY29uc3RhbnRzLCBzdHJpbmcpCiAgICBlbGlmIHN0cmluZyA9PSAiTm9uZSI6CiAgICAgICAgcmV0dXJuIE5vbmUKICAgIGVsaWYgc3RyaW5nID09ICJUcnVlIjoKICAgICAgICByZXR1cm4gVHJ1ZQogICAgZWxpZiBzdHJpbmcgPT0gIkZhbHNlIjoKICAgICAgICByZXR1cm4gRmFsc2UKICAgIGVsaWYgIjoiIGluIHN0cmluZyBhbmQgc3RyaW5nWzogc3RyaW5nLmluZGV4KCI6IildLmlzYWxwaGEoKToKICAgICAgICByZXR1cm4gZ2V0X21lZGlhKHN0cmluZykKICAgIGVsaWYgbGVuKHN0cmluZ19zZXQgLSBJTlQpID09IDAgYW5kIHN0cmluZy5pc251bWVyaWMoKToKICAgICAgICByZXR1cm4gaW50KHN0cmluZykKICAgIGVsaWYgbGVuKHN0cmluZ19zZXQgLSBERUNJTUFMKSA9PSAwOgogICAgICAgIHJldHVybiBEZWNpbWFsKHN0cmluZykKICAgIGVsaWYgbGVuKHN0cmluZykgPiAyIGFuZCBiID09ICJ7IiBhbmQgZSA9PSAifSI6CiAgICAgICAgaWYgbmFtZXNwYWNlIGlzIE5vbmU6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoCiAgICAgICAgICAgICAgICAiVW5hbGxvd2VkIHdyaXRlYWJsZS5Xcml0ZWFibGUgaW4gbm9uZSBuYW1lc3BhY2VkIGNvbnRleHQiLAogICAgICAgICAgICAgICAgc3RyaW5nLAogICAgICAgICAgICApCiAgICAgICAgY29kZSA9IHN0cmluZ1sxOi0xXQogICAgICAgIGlmIGxlbihjb2RlKSA+PSAyIGFuZCBjb2RlWzBdID09ICIkIjoKICAgICAgICAgICAgcmV0dXJuIHdyaXRlYWJsZS5Xcml0ZWFibGUuZnJvbV9uYW1lKG5hbWVzcGFjZSwgY29kZVsxOl0pCiAgICAgICAgaWYgbGVuKGNvZGUpID49IDIgYW5kIGNvZGVbMF0gPT0gInsiIGFuZCBjb2RlWy0xXSA9PSAifSI6CiAgICAgICAgICAgIGNvZGUgPSBjb2RlWzE6LTFdCiAgICAgICAgICAgIGlmICJ8fCIgaW4gY29kZToKICAgICAgICAgICAgICAgIGdldCwgc2V0XyA9IGNvZGUuc3BsaXQoInx8IikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGdldCwgc2V0XyA9IGNvZGUsICIiCiAgICAgICAgICAgIHJldHVybiB3cml0ZWFibGUuV3JpdGVhYmxlLmZyb21fZ2V0X3NldChuYW1lc3BhY2UsIGdldCwgc2V0XykKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gZXZhbChjb2RlLCB7fSwgbmFtZXNwYWNlKQogICAgZWxpZiBiIGluIFNUUklOR19RVU9URVM6CiAgICAgICAgaWYgZSA9PSBiOgogICAgICAgICAgICByZXR1cm4gc3RyaW5nWzE6LTFdCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigiVW50ZXJtaW5hdGVkIHN0cmluZzoiLCBzdHJpbmcpCiAgICBlbGlmIHN0cmluZ1swXSA9PSBzdHJpbmdbLTFdID09ICIvIjoKICAgICAgICByZXR1cm4gUGF0aChvcy5wYXRoLmV4cGFuZHZhcnMoc3RyaW5nWzE6LTFdKSkKICAgIGVsaWYgc3RyaW5nWzBdID09ICJbIiBhbmQgc3RyaW5nWy0xXSA9PSAiXSI6CiAgICAgICAgcmV0dXJuIGRpY3Rpb25hcnkuVHJhbnNsYXRpb24oc3RyaW5nWzE6LTFdKQogICAgZWxpZiAiOiIgaW4gc3RyaW5nIGFuZCBsZW4oc3RyaW5nX3NldCAtIChERUNJTUFMIHwgU0xJQ0UpKSA9PSAwOgogICAgICAgIGlmIGxlbihkIDo9IChzdHJpbmdfc2V0IC0gU0xJQ0UpKSA+IDA6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIndyb25nIHNsaWNlIiwgc3RyaW5nLCBkKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBzbGljZSgqbWFwKGludCwgc3RyaW5nLnNwbGl0KCI6IikpKQogICAgZWxpZiBsZW4oc3RyaW5nX3NldCAtIFBPSU5UKSA9PSAwOgogICAgICAgIHZhbHVlcyA9IFtdCiAgICAgICAgcG9zID0gMAogICAgICAgIHdoaWxlIHBvcyA8IGxlbihzdHJpbmcpOgogICAgICAgICAgICBiZWdpbiA9IHBvcwogICAgICAgICAgICBpZiAiLCIgaW4gc3RyaW5nW3BvczpdOgogICAgICAgICAgICAgICAgZW5kID0gc3RyaW5nLmluZGV4KCIsIiwgcG9zKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgZW5kID0gbGVuKHN0cmluZykKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgaWYgIi4iIGluIHN0cmluZ1tiZWdpbjplbmRdOgogICAgICAgICAgICAgICAgICAgIGRlYyA9IERlY2ltYWwoc3RyaW5nW2JlZ2luOmVuZF0pCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGRlYyA9IGludChzdHJpbmdbYmVnaW46ZW5kXSkKICAgICAgICAgICAgZXhjZXB0IGRlY2ltYWwuSW52YWxpZE9wZXJhdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigKICAgICAgICAgICAgICAgICAgICBzdHIoZSksCiAgICAgICAgICAgICAgICAgICAgc3RyaW5nLAogICAgICAgICAgICAgICAgICAgIGJlZ2luLAogICAgICAgICAgICAgICAgICAgIHN0cmluZ1tiZWdpbjplbmRdLAogICAgICAgICAgICAgICAgKSBmcm9tIGUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHZhbHVlcy5hcHBlbmQoZGVjKQogICAgICAgICAgICBmaW5hbGx5OgogICAgICAgICAgICAgICAgcG9zID0gZW5kICsgMQogICAgICAgIHJldHVybiB0dXBsZSh2YWx1ZXMpCiAgICBlbHNlOgogICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIlVucmVjb2duc2VkIGxpdGVyYWw6IiwgcmVwcihzdHJpbmcpKQoKCmNsYXNzIFRlbXBsYXRlOgogICAgIiIiCiAgICBBIHRha3RrIGNvbXBvbmVudCB0ZW1wbGF0ZSwgY2FuIGJlIHJlbmRlcnJlZCBpbnRvIGEgcmVhbCBjb21wb25lbnQuCiAgICBIb2xkcyBwYXJzZWQgaW5zdHJ1Y3Rpb25zIGFuZCBuYW1lc3BhY2UuCiAgICAiIiIKCiAgICBAZGF0YWNsYXNzZXMuZGF0YWNsYXNzCiAgICBjbGFzcyBJdGVtOgogICAgICAgICIiIgogICAgICAgIEl0ZW0gaW4gdGVtcGxhdGUgcGFyc2UgcmVzdWx0LCByZXByZXNlbnRzIGFuIGluc3RydWN0aW9uIG9yIHRhZy4KICAgICAgICAiIiIKCiAgICAgICAgdHlwZTogVGFnVHlwZQogICAgICAgIG5hbWU6IHN0cgogICAgICAgIGFyZ3M6IHR1cGxlCiAgICAgICAgcGFyZW50OiAiVGVtcGxhdGUuSXRlbSIgPSBOb25lCiAgICAgICAgY2hpbGRyZW46IGxpc3QgPSBkYXRhY2xhc3Nlcy5maWVsZChkZWZhdWx0X2ZhY3Rvcnk9bGlzdCkKCiAgICAgICAgZGVmIHJlbmRlcihzZWxmLCBwYXJlbnQsIG5hbWVzcGFjZSk6CiAgICAgICAgICAgICIiIkNyZWF0ZSB0aGUgY29tcG9uZW50LiIiIgogICAgICAgICAgICBpZiBzZWxmLnR5cGUgPT0gVGFnVHlwZS5UQUc6CiAgICAgICAgICAgICAgICBhbGlhcywgYXR0cnMgPSBzZWxmLmFyZ3MKICAgICAgICAgICAgICAgIGNvbXAgPSBnZXRfY29tcG9uZW50KHNlbGYubmFtZSwgbmFtZXNwYWNlKSgKICAgICAgICAgICAgICAgICAgICBwYXJlbnQ9cGFyZW50LAogICAgICAgICAgICAgICAgICAgIGF0dHJzPWF0dHJzLAogICAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZT1uYW1lc3BhY2UsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBpZiBhbGlhcyBpcyBub3QgTm9uZToKICAgICAgICAgICAgICAgICAgICBuYW1lc3BhY2VbYWxpYXNdID0gY29tcAogICAgICAgICAgICAgICAgcmV0dXJuIGNvbXAKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHJhaXNlIE5vdEltcGxlbWVudGVkRXJyb3IoKQoKICAgICAgICBkZWYgX19yZXByX18oc2VsZikgLT4gc3RyOgogICAgICAgICAgICAiIiJSZXByb2R1Y2UgdGhlIG9iamVjdCBhcyBzdHJpbmciIiIKICAgICAgICAgICAgaGVhZCA9IHNlbGYubmFtZQogICAgICAgICAgICBjaGlsZHJlbiA9ICIiCiAgICAgICAgICAgIGlmIHNlbGYudHlwZSA9PSBUYWdUeXBlLlRBRzoKICAgICAgICAgICAgICAgIGFsaWFzLCBhdHRycyA9IHNlbGYuYXJncwogICAgICAgICAgICAgICAgaWYgYWxpYXMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgaGVhZCArPSAiOiIgKyBhbGlhcwogICAgICAgICAgICAgICAgaWYgYXR0cnM6CiAgICAgICAgICAgICAgICAgICAgaGVhZCArPSAiKCIgKyAiICIuam9pbihtYXAoIj0iLmpvaW4sIGF0dHJzLml0ZW1zKCkpKSArICIpIgogICAgICAgICAgICBpZiBsZW4oc2VsZi5jaGlsZHJlbikgPiAwOgogICAgICAgICAgICAgICAgY2hpbGRyZW4gPSAoCiAgICAgICAgICAgICAgICAgICAgIntcbiIKICAgICAgICAgICAgICAgICAgICArICJcbiIuam9pbigKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIiAgIiArIGxuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgbG4gaW4gIixcbiIuam9pbigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXAoVGVtcGxhdGUuSXRlbS5fX3JlcHJfXywgc2VsZi5jaGlsZHJlbikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkuc3BsaXRsaW5lcygpCiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgKyAiXG59IgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICByZXR1cm4gZiJ7aGVhZH17Y2hpbGRyZW59IgoKICAgIGluc3RydWN0aW9uczogbGlzdFtJdGVtXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCByb290OiBJdGVtLCBuYW1lc3BhY2U9Tm9uZSk6CiAgICAgICAgIiIiQ3JlYXRlIGEgdGFrdGwgdGVtcGxhdGUiIiIKICAgICAgICBzZWxmLnJvb3QgPSByb290CiAgICAgICAgc2VsZi5uYW1lc3BhY2UgPSBuYW1lc3BhY2UKCiAgICBAY2xhc3NtZXRob2QKICAgIGRlZiBwYXJzZShjbHMsIHN0cmluZzogc3RyKSAtPiAiVGVtcGxhdGUiOgogICAgICAgICIiIkxvYWQgdGVtcGxhdGUgZnJvbSB0YWt0bCBzb3VyY2Ugc3RyaW5nLiIiIgogICAgICAgIHJldHVybiBUZW1wbGF0ZShTdGF0ZShzdHJpbmcucmVwbGFjZSgiXFxcbiIsICIiKSkucGFyc2UoKSkKCiAgICBkZWYgZXZhbChzZWxmLCBfbmFtZXNwYWNlOiBPcHRpb25hbFt3cml0ZWFibGUuTmFtZXNwYWNlXSA9IE5vbmUpOgogICAgICAgICIiIkV2YWx1YXRlIHRoZSB0ZW1wbGF0ZSBpbiB0aGUgZ2l2ZW4gbmFtZXNwYWNlLiIiIgogICAgICAgIG5hbWVzcGFjZSA9IHNlbGYubmFtZXNwYWNlIG9yIF9uYW1lc3BhY2UKICAgICAgICBhc3NlcnQgbmFtZXNwYWNlIGlzIG5vdCBOb25lLCAiTm8gbmFtZXNwYWNlIHNwZWNpZmllZCEiCgogICAgICAgIGRlZiBzdWJfcmVuZGVyKHBhcmVudCwgaXRlbSk6CiAgICAgICAgICAgIGNvbXAgPSBpdGVtLnJlbmRlcihwYXJlbnQsIG5hbWVzcGFjZSkKICAgICAgICAgICAgZm9yIGNoaWxkIGluIGl0ZW0uY2hpbGRyZW46CiAgICAgICAgICAgICAgICBzdWJfcmVuZGVyKGNvbXAsIGNoaWxkKQogICAgICAgICAgICByZXR1cm4gY29tcAoKICAgICAgICByZXR1cm4gc3ViX3JlbmRlcihOb25lLCBzZWxmLnJvb3QpCgogICAgZGVmIF9fcmVwcl9fKHNlbGYpIC0+IHN0cjoKICAgICAgICByZXR1cm4gc3RyKHNlbGYucm9vdCkKCgpkZWYgZ2V0X2NvbXBvbmVudCgKICAgIG5hbWU6IHN0ciwgbmFtZXNwYWNlOiBPcHRpb25hbFt3cml0ZWFibGUuTmFtZXNwYWNlXSA9IE5vbmUKKSAtPiAiY29tcG9uZW50LkJhc2VDb21wb25lbnQiOgogICAgIiIiR2V0IGEgY29tcG9uZW50IGJ5IG5hbWUgZnJvbSBidWlsdGlucyBvciBvcHRpb25hbCBgbmFtZXNwYWNlYC4iIiIKICAgIGZyb20gLiBpbXBvcnQgY29tcG9uZW50cwoKICAgIHJldHVybiBldmFsKG5hbWUsIHt9LCB2YXJzKGNvbXBvbmVudHMpIHwgKG5hbWVzcGFjZS52YXJzIG9yIHt9KSkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPZIAAAAAAAA9kgAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n\nclass"
					},
					"BwAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACsEAAAAAAAAAAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAtBAAAAAAAAAAAAAAtBAAAAAAAAC4EAAAAAAAAAAAAAC4EAAAAAAAALwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ArgTy"
					},
					"BgAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAxBAAAAAAAAAAAAAAxBAAAAAAAADIEAAAAAAAAAAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwQAAAAAAAAvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "pe:"
					},
					"AwAAADUEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQQAAAAAAAA1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAADcEAAAAAAAANwQAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADcEAAAAAAAAOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAADgEAAAAAAAAOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAADgEAAAAAAAAOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAADkEAAAAAAAAOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQQAAAAAAAA5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "nu,m"
					},
					"BAAAADkEAAAAAAAAOgQAAAAAAAAAAAAAOgQAAAAAAAA7BAAAAAAAAAAAAAA7BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQQAAAAAAAA5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					2,
					"left_delete",
					null,
					"AgAAADwEAAAAAAAAPAQAAAAAAAABAAAAbTsEAAAAAAAAOwQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAPQQAAAAAAAA9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "m.EN"
					},
					"BAAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD4EAAAAAAAAAAAAAD4EAAAAAAAAPwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwQAAAAAAAA7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert_completion",
					{
						"completion": "Enum",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Enum"
					},
					"AgAAAD0EAAAAAAAAPQQAAAAAAAACAAAARU49BAAAAAAAAEEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEIEAAAAAAAAQwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgQAAAAAAABCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "IN"
					},
					"AgAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "FERRED"
					},
					"BgAAAEoEAAAAAAAASwQAAAAAAAAAAAAASwQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAE0EAAAAAAAAAAAAAE0EAAAAAAAATgQAAAAAAAAAAAAATgQAAAAAAABPBAAAAAAAAAAAAABPBAAAAAAAAFAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgQAAAAAAABKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFAEAAAAAAAAUQQAAAAAAAAAAAAAUQQAAAAAAABSBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " en"
					},
					"AwAAAFIEAAAAAAAAUwQAAAAAAAAAAAAAUwQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgQAAAAAAABSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert_completion",
					{
						"completion": "enum",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "enum"
					},
					"AgAAAFMEAAAAAAAAUwQAAAAAAAACAAAAZW5TBAAAAAAAAFcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQQAAAAAAABVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": ".a"
					},
					"AgAAAFcEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwQAAAAAAABXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert_completion",
					{
						"completion": "auto",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "auto"
					},
					"AgAAAFgEAAAAAAAAWAQAAAAAAAABAAAAYVgEAAAAAAAAXAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQQAAAAAAABZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFwEAAAAAAAAXgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAQAAAAAAABcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAF0EAAAAAAAAXQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQQAAAAAAABdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\nE"
					},
					"AwAAAF4EAAAAAAAAXwQAAAAAAAAAAAAAXwQAAAAAAABjBAAAAAAAAAAAAABjBAAAAAAAAGQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgQAAAAAAABeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "VA"
					},
					"AgAAAGQEAAAAAAAAZQQAAAAAAAAAAAAAZQQAAAAAAABmBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAQAAAAAAABkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					3,
					"left_delete",
					null,
					"AwAAAGUEAAAAAAAAZQQAAAAAAAABAAAAQWQEAAAAAAAAZAQAAAAAAAABAAAAVmMEAAAAAAAAYwQAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAZgQAAAAAAABmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "RAW"
					},
					"AwAAAGMEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABlBAAAAAAAAAAAAABlBAAAAAAAAGYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwQAAAAAAABjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGYEAAAAAAAAZwQAAAAAAAAAAAAAZwQAAAAAAABoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgQAAAAAAABmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " enum"
					},
					"BQAAAGgEAAAAAAAAaQQAAAAAAAAAAAAAaQQAAAAAAABqBAAAAAAAAAAAAABqBAAAAAAAAGsEAAAAAAAAAAAAAGsEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ".enum"
					},
					"BQAAAG0EAAAAAAAAbgQAAAAAAAAAAAAAbgQAAAAAAABvBAAAAAAAAAAAAABvBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAcQQAAAAAAAAAAAAAcQQAAAAAAAByBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQQAAAAAAABtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHIEAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgQAAAAAAAByBAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAHMEAAAAAAAAcwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwQAAAAAAABzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\nEVA"
					},
					"BQAAAHQEAAAAAAAAdQQAAAAAAAAAAAAAdQQAAAAAAAB5BAAAAAAAAAAAAAB5BAAAAAAAAHoEAAAAAAAAAAAAAHoEAAAAAAAAewQAAAAAAAAAAAAAewQAAAAAAAB8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAQAAAAAAAB0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "LUATED"
					},
					"BgAAAHwEAAAAAAAAfQQAAAAAAAAAAAAAfQQAAAAAAAB+BAAAAAAAAAAAAAB+BAAAAAAAAH8EAAAAAAAAAAAAAH8EAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACBBAAAAAAAAAAAAACBBAAAAAAAAIIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIIEAAAAAAAAgwQAAAAAAAAAAAAAgwQAAAAAAACEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggQAAAAAAACCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " enum."
					},
					"BgAAAIQEAAAAAAAAhQQAAAAAAAAAAAAAhQQAAAAAAACGBAAAAAAAAAAAAACGBAAAAAAAAIcEAAAAAAAAAAAAAIcEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACJBAAAAAAAAAAAAACJBAAAAAAAAIoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "enum"
					},
					"BAAAAIoEAAAAAAAAiwQAAAAAAAAAAAAAiwQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAI0EAAAAAAAAAAAAAI0EAAAAAAAAjgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI4EAAAAAAAAkAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgQAAAAAAACOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAI8EAAAAAAAAjwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwQAAAAAAACPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAjwQAAAAAAACPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"left_delete",
					null,
					"AQAAAMkzAAAAAAAAyTMAAAAAAAA3AAAAIjoiIGluIHN0cmluZyBhbmQgc3RyaW5nWzogc3RyaW5nLmluZGV4KCI6IildLmlzYWxwaGEoKQ",
					"AQAAAAAAAAABAAAAyTMAAAAAAAAANAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAMkzAAAAAAAAyjMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyTMAAAAAAADJMwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAMozAAAAAAAAyzMAAAAAAAAAAAAAyzMAAAAAAADMMwAAAAAAAAAAAADMMwAAAAAAAM0zAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyjMAAAAAAADKMwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " ?<"
					},
					"AwAAAM0zAAAAAAAAzjMAAAAAAAAAAAAAzjMAAAAAAADPMwAAAAAAAAAAAADPMwAAAAAAANAzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzTMAAAAAAADNMwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					2,
					"left_delete",
					null,
					"AgAAAM8zAAAAAAAAzzMAAAAAAAABAAAAPM4zAAAAAAAAzjMAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAA0DMAAAAAAADQMwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAM4zAAAAAAAA0DMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzjMAAAAAAADOMwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAM8zAAAAAAAA0DMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzzMAAAAAAADPMwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAANEzAAAAAAAA0jMAAAAAAAAAAAAA0jMAAAAAAADTMwAAAAAAAAAAAADTMwAAAAAAANQzAAAAAAAAAAAAANQzAAAAAAAA1TMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0TMAAAAAAADRMwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAANUzAAAAAAAA1jMAAAAAAAAAAAAA1jMAAAAAAADXMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1TMAAAAAAADVMwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAANczAAAAAAAA2DMAAAAAAAAAAAAA2DMAAAAAAADZMwAAAAAAAAAAAADZMwAAAAAAANozAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1zMAAAAAAADXMwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANozAAAAAAAA2zMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2jMAAAAAAADaMwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANszAAAAAAAA3TMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2zMAAAAAAADbMwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAANwzAAAAAAAA3TMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3DMAAAAAAADcMwAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAP8zAAAAAAAAATQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/zMAAAAAAAD/MwAAAAAAAAAAAAAAYGdA"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "1:-"
					},
					"AwAAAAA0AAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAM0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAAM0AAAAAAAABDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAABDQAAAAAAAAENAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/taktk/components.py",
			"settings":
			{
				"buffer_size": 6592,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAABRQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\ncla"
					},
					"BQAAAAUUAAAAAAAABhQAAAAAAAAAAAAABhQAAAAAAAAHFAAAAAAAAAAAAAAHFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAACRQAAAAAAAAAAAAACRQAAAAAAAAKFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUUAAAAAAAABRQAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "ss"
					},
					"AgAAAAoUAAAAAAAACxQAAAAAAAAAAAAACxQAAAAAAAAMFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoUAAAAAAAAChQAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ctk"
					},
					"BAAAAAwUAAAAAAAADRQAAAAAAAAAAAAADRQAAAAAAAAOFAAAAAAAAAAAAAAOFAAAAAAAAA8UAAAAAAAAAAAAAA8UAAAAAAAAEBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwUAAAAAAAADBQAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABAUAAAAAAAAERQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAABEUAAAAAAAAEhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEUAAAAAAAAERQAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"reindent",
					null,
					"AQAAABIUAAAAAAAAFhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIUAAAAAAAAEhQAAAAAAAAAAAAAAABOQA"
				],
				[
					14,
					1,
					"paste_and_indent",
					null,
					"AQAAABYUAAAAAAAAahgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYUAAAAAAAAFhQAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					2,
					"left_delete",
					null,
					"AgAAAFkUAAAAAAAAWRQAAAAAAAAsAAAAICAgIGZyb20gLi4uIGltcG9ydCBOaWwKICAgIGZyb20gLiBpbXBvcnQgKgpYFAAAAAAAAFgUAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkUAAAAAAAAhRQAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "\nclass"
					},
					"BgAAAD0YAAAAAAAAPhgAAAAAAAAAAAAAPhgAAAAAAAA/GAAAAAAAAAAAAAA/GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAAQRgAAAAAAAAAAAAAQRgAAAAAAABCGAAAAAAAAAAAAABCGAAAAAAAAEMYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0YAAAAAAAAPRgAAAAAAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " sdoen"
					},
					"BgAAAEMYAAAAAAAARBgAAAAAAAAAAAAARBgAAAAAAABFGAAAAAAAAAAAAABFGAAAAAAAAEYYAAAAAAAAAAAAAEYYAAAAAAAARxgAAAAAAAAAAAAARxgAAAAAAABIGAAAAAAAAAAAAABIGAAAAAAAAEkYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMYAAAAAAAAQxgAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAEcYAAAAAAAARxgAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AQAAAEcYAAAAAAAASBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcYAAAAAAAARxgAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEkYAAAAAAAAShgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkYAAAAAAAASRgAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEoYAAAAAAAASxgAAAAAAAAAAAAASxgAAAAAAABPGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoYAAAAAAAAShgAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"paste_and_indent",
					null,
					"AQAAAE8YAAAAAAAAohgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8YAAAAAAAATxgAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAKIYAAAAAAAAoxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIYAAAAAAAAohgAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "yt"
					},
					"AgAAAAYUAAAAAAAABxQAAAAAAAAAAAAABxQAAAAAAAAIFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYUAAAAAAAABhQAAAAAAAAAAAAAAAAAAA"
				],
				[
					49,
					2,
					"left_delete",
					null,
					"AgAAAAcUAAAAAAAABxQAAAAAAAABAAAAdAYUAAAAAAAABhQAAAAAAAABAAAAeQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAAAYUAAAAAAAABxQAAAAAAAAAAAAABxQAAAAAAAAIFAAAAAAAAAAAAAAIFAAAAAAAAAkUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYUAAAAAAAABhQAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"cut",
					null,
					"AQAAABkUAAAAAAAAGRQAAAAAAABBAAAAZnJvbSBjdXN0b210a2ludGVyIGltcG9ydCBDVGtCdXR0b24sIENUa0VudHJ5LCBDVGtGcmFtZSwgQ1RrTGFiZWw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoUAAAAAAAAGRQAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					2,
					"left_delete",
					null,
					"AgAAABUUAAAAAAAAFRQAAAAAAAAEAAAAICAgIBQUAAAAAAAAFBQAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkUAAAAAAAAGRQAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkUAAAAAAAAChQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkUAAAAAAAACRQAAAAAAAAAAAAAAABOQA"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAAAkUAAAAAAAACRQAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoUAAAAAAAAChQAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAAkUAAAAAAAAChQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkUAAAAAAAACRQAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAoUAAAAAAAACxQAAAAAAAAAAAAACxQAAAAAAAAPFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoUAAAAAAAAChQAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"paste_and_indent",
					null,
					"AQAAAA8UAAAAAAAAUBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8UAAAAAAAADxQAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFAUAAAAAAAAURQAAAAAAAAAAAAAURQAAAAAAABVFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAUAAAAAAAAUBQAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"left_delete",
					null,
					"AQAAAFEUAAAAAAAAURQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUUAAAAAAAAVRQAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "except"
					},
					"BgAAAFEUAAAAAAAAUhQAAAAAAAAAAAAAUhQAAAAAAABTFAAAAAAAAAAAAABTFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAVRQAAAAAAAAAAAAAVRQAAAAAAABWFAAAAAAAAAAAAABWFAAAAAAAAFcUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEUAAAAAAAAURQAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFcUAAAAAAAAWBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcUAAAAAAAAVxQAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " Im"
					},
					"AwAAAFcUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABZFAAAAAAAAAAAAABZFAAAAAAAAFoUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcUAAAAAAAAVxQAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert_completion",
					{
						"completion": "ImportError",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ImportError"
					},
					"AgAAAFgUAAAAAAAAWBQAAAAAAAACAAAASW1YFAAAAAAAAGMUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoUAAAAAAAAWhQAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\npass"
					},
					"BgAAAGQUAAAAAAAAZRQAAAAAAAAAAAAAZRQAAAAAAABpFAAAAAAAAAAAAABpFAAAAAAAAGoUAAAAAAAAAAAAAGoUAAAAAAAAaxQAAAAAAAAAAAAAaxQAAAAAAABsFAAAAAAAAAAAAABsFAAAAAAAAG0UAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQUAAAAAAAAZBQAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG0UAAAAAAAAbhQAAAAAAAAAAAAAbhQAAAAAAAByFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0UAAAAAAAAbRQAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAG4UAAAAAAAAbhQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIUAAAAAAAAchQAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "else:"
					},
					"BQAAAG4UAAAAAAAAbxQAAAAAAAAAAAAAbxQAAAAAAABwFAAAAAAAAAAAAABwFAAAAAAAAHEUAAAAAAAAAAAAAHEUAAAAAAAAchQAAAAAAAAAAAAAchQAAAAAAABzFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4UAAAAAAAAbhQAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"indent",
					null,
					"HgAAAHQUAAAAAAAAeBQAAAAAAAAAAAAAhRQAAAAAAACJFAAAAAAAAAAAAAChFAAAAAAAAKUUAAAAAAAAAAAAAMEUAAAAAAAAxRQAAAAAAAAAAAAA3RQAAAAAAADhFAAAAAAAAAAAAAD8FAAAAAAAAAAVAAAAAAAAAAAAABUVAAAAAAAAGRUAAAAAAAAAAAAAOBUAAAAAAAA8FQAAAAAAAAAAAABcFQAAAAAAAGAVAAAAAAAAAAAAAIAVAAAAAAAAhBUAAAAAAAAAAAAAphUAAAAAAACqFQAAAAAAAAAAAADGFQAAAAAAAMoVAAAAAAAAAAAAAOYVAAAAAAAA6hUAAAAAAAAAAAAACBYAAAAAAAAMFgAAAAAAAAAAAAAmFgAAAAAAACoWAAAAAAAAAAAAAEcWAAAAAAAASxYAAAAAAAAAAAAAYxYAAAAAAABnFgAAAAAAAAAAAAB8FgAAAAAAAIAWAAAAAAAAAAAAALcWAAAAAAAAuxYAAAAAAAAAAAAA7xYAAAAAAADzFgAAAAAAAAAAAAAnFwAAAAAAACsXAAAAAAAAAAAAAFYXAAAAAAAAWhcAAAAAAAAAAAAAeRcAAAAAAAB9FwAAAAAAAAAAAACjFwAAAAAAAKcXAAAAAAAAAAAAAM0XAAAAAAAA0RcAAAAAAAAAAAAA+BcAAAAAAAD8FwAAAAAAAAAAAAAiGAAAAAAAACYYAAAAAAAAAAAAAFoYAAAAAAAAXhgAAAAAAAAAAAAAhBgAAAAAAACIGAAAAAAAAAAAAAC+GAAAAAAAAMIYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkUAAAAAAAATxgAAAAAAAAAAAAAAAA+QA"
				],
				[
					89,
					1,
					"cut",
					null,
					"AQAAANwYAAAAAAAA3BgAAAAAAABmAAAACmNsYXNzIHNkb3duOgogICAgZnJvbSAuLi5zZG93biBpbXBvcnQgTGV4ZWRDb2RlIGFzIGNvZGUKICAgIGZyb20gLi4uc2Rvd24gaW1wb3J0IFNkb3duVmlld2VyIGFzIHZpZXcK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIZAAAAAAAA3BgAAAAAAAAAAAAAAABLQA"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAANsYAAAAAAAA2xgAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwYAAAAAAAA3BgAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAANsYAAAAAAAA3BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsYAAAAAAAA2xgAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAQUAAAAAAAABRQAAAAAAAAAAAAABRQAAAAAAAANFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQUAAAAAAAABBQAAAAAAAAAAAAAAOBlQA"
				],
				[
					98,
					2,
					"left_delete",
					null,
					"AgAAAAkUAAAAAAAACRQAAAAAAAAEAAAAICAgIAUUAAAAAAAABRQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0UAAAAAAAADRQAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAUUAAAAAAAABhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUUAAAAAAAABRQAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"paste",
					null,
					"AQAAAAYUAAAAAAAAbBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYUAAAAAAAABhQAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\"\"\"\"\"\""
					},
					"BgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "Base"
					},
					"BAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " modul"
					},
					"BgAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAA4AAAAAAAAADwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " co"
					},
					"AwAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "ntaini"
					},
					"BgAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "ng"
					},
					"AgAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " taktk"
					},
					"BgAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "uilt-i"
					},
					"BgAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " component"
					},
					"CgAAACkAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "s."
					},
					"AgAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"left_delete",
					null,
					"AQAAADUAAAAAAAAANQAAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYAAAAAAAAANgAAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAAAMAAAAAAAAAAwAAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADLAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYBAAAAAAAAxgEAAAAAAAAAAAAAAADwvw"
				],
				[
					169,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMsBAAAAAAAAzQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsBAAAAAAAAywEAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "\"\"\"\""
					},
					"BAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAANABAAAAAAAA0QEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0BAAAAAAAAzQEAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAAM4BAAAAAAAAzwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4BAAAAAAAAzgEAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " taktk"
					},
					"BgAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANUBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8BAAAAAAAAzwEAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " frame"
					},
					"BgAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUBAAAAAAAA1QEAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"left_delete",
					null,
					"AQAAAMcBAAAAAAAAxwEAAAAAAAAYAAAAICAgICIiIkEgdGFrdGsgZnJhbWUiIiIK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcBAAAAAAAA3wEAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAP8NAAAAAAAAAA4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8NAAAAAAAA/w0AAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAPMNAAAAAAAA9A0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMNAAAAAAAA8w0AAAAAAAAAAAAAAADwvw"
				],
				[
					207,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+GQAAIiIiQmFzZSBtb2R1bGUgY29udGFpbmluZyB0YWt0ayBidWlsdC1pbiBjb21wb25lbnRzLiIiIgpmcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBmaWVsZApmcm9tIHRraW50ZXIgaW1wb3J0IEJvb2xlYW5WYXIKZnJvbSB0a2ludGVyIGltcG9ydCBJbWFnZSBhcyBUa0ltYWdlCmZyb20gdGtpbnRlciBpbXBvcnQgU3RyaW5nVmFyCmZyb20gdGtpbnRlci50dGsgaW1wb3J0IEJ1dHRvbiwgQ2hlY2tidXR0b24sIEVudHJ5LCBGcmFtZSwgTGFiZWwKZnJvbSB0eXBpbmcgaW1wb3J0IENhbGxhYmxlLCBPcHRpb25hbAoKZnJvbSAuLi4gaW1wb3J0IE5pbCwgTmlsVHlwZSwgcmVzb2x2ZQpmcm9tIC4uLm1lZGlhIGltcG9ydCBJbWFnZQpmcm9tIC4uLndyaXRlYWJsZSBpbXBvcnQgV3JpdGVhYmxlCmZyb20gLi4gaW1wb3J0IFRrQ29tcG9uZW50LCBfQ29tcG9uZW50CgoKY2xhc3MgZnJhbWUoVGtDb21wb25lbnQpOgogICAgV2lkZ2V0ID0gRnJhbWUKCiAgICBjbGFzcyBBdHRyczoKICAgICAgICB3ZWlnaHQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBwb3M6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBsYXk6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBiaW5kOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgYm9vdHN0eWxlOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgcGFkZGluZzogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGJvcmRlcndpZHRoOiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgcmVsaWVmOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgd2lkdGg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBoZWlnaHQ6IGludCB8IE5pbFR5cGUgPSBOaWwKCgpjbGFzcyBsYWJlbChUa0NvbXBvbmVudCk6CiAgICBXaWRnZXQgPSBMYWJlbAoKICAgIGNsYXNzIEF0dHJzOgogICAgICAgIHdlaWdodDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIHBvczogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGxheTogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGJpbmQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBib290c3R5bGU6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB0ZXh0OiBzdHIgPSAiZmFrZSIKICAgICAgICBmb3JlZ3JvdW5kOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgYmFja2dyb3VuZDogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHRleHRfY29sb3I6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBwYWR4OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgcGFkeTogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGZvbnQ6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBpbWFnZTogSW1hZ2UgfCBUa0ltYWdlIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGNvbXBvdW5kOiBzdHIgfCBOaWxUeXBlID0gTmlsCgoKY2xhc3MgYnV0dG9uKFRrQ29tcG9uZW50KToKICAgIFdpZGdldCA9IEJ1dHRvbgoKICAgIGNsYXNzIEF0dHJzOgogICAgICAgIHdlaWdodDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIHBvczogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGxheTogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGJpbmQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBib290c3R5bGU6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB0ZXh0OiBzdHIgPSAiZmFrZSIKICAgICAgICBjb21tYW5kOiBDYWxsYWJsZSA9IGxhbWJkYTogTm9uZQogICAgICAgIHBhZHg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBwYWR5OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgZmc6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBiZzogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGltYWdlOiBJbWFnZSB8IFRrSW1hZ2UgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgY29tcG91bmQ6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBiYWNrZ3JvdW5kOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgZm9yZWdyb3VuZDogc3RyIHwgTmlsVHlwZSA9IE5pbAoKCmNsYXNzIGVudHJ5KFRrQ29tcG9uZW50KToKICAgIFdpZGdldCA9IEVudHJ5CiAgICBfYXR0cl9pZ25vcmUgPSAoInRleHQiLCkKCiAgICBjbGFzcyBBdHRyczoKICAgICAgICB3ZWlnaHQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBwb3M6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBsYXk6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBib290c3R5bGU6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB0ZXh0OiBzdHIgPSAiZmFrZSIKICAgICAgICBwYWR4OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgcGFkeTogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHdpZHRoOiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgZm9udDogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHRleHR2YXJpYWJsZTogU3RyaW5nVmFyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHNob3c6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBiaW5kOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCgogICAgZGVmIGNyZWF0ZShzZWxmLCBwYXJlbnQ6ICJPcHRpb25hbFtfQ29tcG9uZW50XSIgPSBOb25lKToKICAgICAgICBfQ29tcG9uZW50LmNyZWF0ZShzZWxmKQogICAgICAgIHBhcmVudCA9IHBhcmVudAogICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgICAgKip7CiAgICAgICAgICAgICAgICBzZWxmLmNvbmZfYWxpYXNzZXNba106IHJlc29sdmUodikKICAgICAgICAgICAgICAgIGZvciBrLCB2IGluIHZhcnMoc2VsZi5hdHRycykuaXRlbXMoKQogICAgICAgICAgICAgICAgaWYgayBpbiBzZWxmLmNvbmZfYWxpYXNzZXMgYW5kIHYgaXMgbm90IE5pbAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICJ0ZXh0dmFyaWFibGUiIG5vdCBpbiBwYXJhbXM6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uoc2VsZi5hdHRycy50ZXh0LCBXcml0ZWFibGUpOgogICAgICAgICAgICAgICAgc2VsZi50ZXh0dmFyaWFibGUgPSBzZWxmLmF0dHJzLnRleHQuc3RyaW5ndmFyCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLnRleHR2YXJpYWJsZSA9IFN0cmluZ1ZhcigpCiAgICAgICAgICAgICAgICBzZWxmLnRleHR2YXJpYWJsZS5zZXQoc2VsZi5hdHRycy50ZXh0KQogICAgICAgICAgICBwYXJhbXNbInRleHR2YXJpYWJsZSJdID0gc2VsZi50ZXh0dmFyaWFibGUKICAgICAgICAgICAgc2VsZi5hdHRycy50ZXh0dmFyaWFibGUgPSBzZWxmLnRleHR2YXJpYWJsZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYudGV4dHZhcmlhYmxlID0gcGFyYW1zWyJ0ZXh0dmFyaWFibGUiXQogICAgICAgIHNlbGYuY29udGFpbmVyID0gc2VsZi5vdXRsZXQgPSBzZWxmLldpZGdldCgKICAgICAgICAgICAgbWFzdGVyPXBhcmVudCwKICAgICAgICAgICAgKipwYXJhbXMsCiAgICAgICAgKQogICAgICAgIHNlbGYuaW5pdF9nZW9tZXRyeSgpCiAgICAgICAgc2VsZi5tYWtlX2JpbmRpbmdzKCkKCgpjbGFzcyBjaGVja2J1dHRvbihUa0NvbXBvbmVudCk6CiAgICBXaWRnZXQgPSBDaGVja2J1dHRvbgogICAgX2F0dHJfaWdub3JlID0gKCJjaGVja2VkIiwpCgogICAgY2xhc3MgQXR0cnM6CiAgICAgICAgd2VpZ2h0OiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgcG9zOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgbGF5OiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgYmluZDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGJvb3RzdHlsZTogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGNoZWNrZWQ6IGJvb2wgPSBGYWxzZQogICAgICAgIHBhZHg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBwYWR5OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgd2lkdGg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB2YXJpYWJsZTogQm9vbGVhblZhciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBfaWdub3JlID0gKCJjaGVja2VkIiwpCgogICAgZGVmIGNyZWF0ZShzZWxmLCBwYXJlbnQ6ICJPcHRpb25hbFtfQ29tcG9uZW50XSIgPSBOb25lKToKICAgICAgICBfQ29tcG9uZW50LmNyZWF0ZShzZWxmKQogICAgICAgIHBhcmVudCA9IHBhcmVudAogICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgICAgKip7CiAgICAgICAgICAgICAgICBzZWxmLmNvbmZfYWxpYXNzZXNba106IHJlc29sdmUodikKICAgICAgICAgICAgICAgIGZvciBrLCB2IGluIHZhcnMoc2VsZi5hdHRycykuaXRlbXMoKQogICAgICAgICAgICAgICAgaWYgayBpbiBzZWxmLmNvbmZfYWxpYXNzZXMgYW5kIHYgaXMgbm90IE5pbAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICJ2YXJpYWJsZSIgbm90IGluIHBhcmFtczoKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShzZWxmLmF0dHJzLmNoZWNrZWQsIFdyaXRlYWJsZSk6CiAgICAgICAgICAgICAgICBzZWxmLnZhcmlhYmxlID0gc2VsZi5hdHRycy5jaGVja2VkLmJvb2xlYW52YXIKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHNlbGYudmFyaWFibGUgPSBCb29sZWFuVmFyKHZhbHVlPXNlbGYuYXR0cnMuY2hlY2tlZCkKICAgICAgICAgICAgcGFyYW1zWyJ2YXJpYWJsZSJdID0gc2VsZi52YXJpYWJsZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYudmFyaWFibGUgPSBwYXJhbXNbInZhcmlhYmxlIl0KICAgICAgICBzZWxmLmNvbnRhaW5lciA9IHNlbGYuV2lkZ2V0KAogICAgICAgICAgICBtYXN0ZXI9cGFyZW50LAogICAgICAgICAgICAqKnBhcmFtcywKICAgICAgICApCiAgICAgICAgc2VsZi5vdXRsZXQgPSBOb25lCiAgICAgICAgc2VsZi5pbml0X2dlb21ldHJ5KCkKICAgICAgICBzZWxmLm1ha2VfYmluZGluZ3MoKQoKCmNsYXNzIHNkb3duOgogICAgZnJvbSAuLi5zZG93biBpbXBvcnQgTGV4ZWRDb2RlIGFzIGNvZGUKICAgIGZyb20gLi4uc2Rvd24gaW1wb3J0IFNkb3duVmlld2VyIGFzIHZpZXcKCgp0cnk6CiAgICBmcm9tIGN1c3RvbXRraW50ZXIgaW1wb3J0IENUa0J1dHRvbiwgQ1RrRW50cnksIENUa0ZyYW1lLCBDVGtMYWJlbApleGNlcHQgSW1wb3J0RXJyb3I6CiAgICBwYXNzCmVsc2U6CiAgICBjbGFzcyBjdGs6CgoKICAgICAgICBjbGFzcyBmcmFtZShmcmFtZSk6CiAgICAgICAgICAgIFdpZGdldCA9IENUa0ZyYW1lCgoKICAgICAgICBjbGFzcyBsYWJlbChsYWJlbCk6CiAgICAgICAgICAgIFdpZGdldCA9IENUa0xhYmVsCgogICAgICAgICAgICBjbGFzcyBhdHRyczoKICAgICAgICAgICAgICAgIHRleHQ6IHN0ciA9ICJmYWtlIgogICAgICAgICAgICAgICAgZmdfY29sb3I6IHN0ciA9IE5pbAogICAgICAgICAgICAgICAgYmdfY29sb3I6IHN0ciA9IE5pbAogICAgICAgICAgICAgICAgdGV4dF9jb2xvcjogc3RyID0gTmlsCiAgICAgICAgICAgICAgICBwYWR4OiBpbnQgPSBOaWwKICAgICAgICAgICAgICAgIHBhZHk6IGludCA9IE5pbAogICAgICAgICAgICAgICAgZm9udDogc3RyID0gTmlsCgoKICAgICAgICBjbGFzcyBidXR0b24oYnV0dG9uKToKICAgICAgICAgICAgV2lkZ2V0ID0gQ1RrQnV0dG9uCgoKICAgICAgICBjbGFzcyBlbnRyeShlbnRyeSk6CiAgICAgICAgICAgIGNsYXNzIEF0dHJzOgogICAgICAgICAgICAgICAgd2VpZ2h0OiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgICAgICAgICBwb3M6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICAgICAgICAgIGxheTogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgICAgICAgICAgYm9vdHN0eWxlOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICB0ZXh0OiBzdHIgPSAiZmFrZSIKICAgICAgICAgICAgICAgIHBhZHg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICAgICAgICAgIHBhZHk6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICAgICAgICAgIHdpZHRoOiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICBmb250OiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICB0ZXh0dmFyaWFibGU6IFN0cmluZ1ZhciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICAgICAgICAgIHNob3c6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICAgICAgICAgIGJpbmQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKCiAgICAgICAgICAgIFdpZGdldCA9IENUa0VudHJ5CgAAAAAAAAAAfBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcVAAAAAAAAJxUAAAAAAAAAAAAAAAAAAA"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AQAAAIsBAAAAAAAAiwEAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwBAAAAAAAAjAEAAAAAAAAAAAAAAADwvw"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "compon"
					},
					"BgAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMBAAAAAAAAkwEAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "ent"
					},
					"AwAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkBAAAAAAAAmQEAAAAAAAAAAAAAAADwvw"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwBAAAAAAAAnAEAAAAAAAAAAAAAAADwvw"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "component"
					},
					"NgAAAMoOAAAAAAAAyw4AAAAAAAAAAAAAvQgAAAAAAAC+CAAAAAAAAAAAAAAjBgAAAAAAACQGAAAAAAAAAAAAAKgDAAAAAAAAqQMAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAANAOAAAAAAAA0Q4AAAAAAAAAAAAAwggAAAAAAADDCAAAAAAAAAAAAAAnBgAAAAAAACgGAAAAAAAAAAAAAKsDAAAAAAAArAMAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAANYOAAAAAAAA1w4AAAAAAAAAAAAAxwgAAAAAAADICAAAAAAAAAAAAAArBgAAAAAAACwGAAAAAAAAAAAAAK4DAAAAAAAArwMAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAACfAQAAAAAAAKABAAAAAAAAAAAAANwOAAAAAAAA3Q4AAAAAAAAAAAAAzAgAAAAAAADNCAAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAALEDAAAAAAAAsgMAAAAAAAAAAAAAyQEAAAAAAADKAQAAAAAAAAAAAACgAQAAAAAAAKEBAAAAAAAAAAAAAOIOAAAAAAAA4w4AAAAAAAAAAAAA0QgAAAAAAADSCAAAAAAAAAAAAAAzBgAAAAAAADQGAAAAAAAAAAAAALQDAAAAAAAAtQMAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAOgOAAAAAAAA6Q4AAAAAAAAAAAAA1ggAAAAAAADXCAAAAAAAAAAAAAA3BgAAAAAAADgGAAAAAAAAAAAAALcDAAAAAAAAuAMAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAACiAQAAAAAAAKMBAAAAAAAAAAAAAO4OAAAAAAAA7w4AAAAAAAAAAAAA2wgAAAAAAADcCAAAAAAAAAAAAAA7BgAAAAAAADwGAAAAAAAAAAAAALoDAAAAAAAAuwMAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAPQOAAAAAAAA9Q4AAAAAAAAAAAAA4AgAAAAAAADhCAAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAL0DAAAAAAAAvgMAAAAAAAAAAAAA0QEAAAAAAADSAQAAAAAAAAAAAACkAQAAAAAAAKUBAAAAAAAAAAAAAPoOAAAAAAAA+w4AAAAAAAAAAAAA5QgAAAAAAADmCAAAAAAAAAAAAABDBgAAAAAAAEQGAAAAAAAAAAAAAMADAAAAAAAAwQMAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABgAAAJ0BAAAAAAAAnQEAAAAAAAAAAAAAAADwv8MBAAAAAAAAwwEAAAAAAAAAAAAAAADwv6gDAAAAAAAAqAMAAAAAAAAAAAAAAADwvyMGAAAAAAAAIwYAAAAAAAAAAAAAAADwv70IAAAAAAAAvQgAAAAAAAAAAAAAAADwv8oOAAAAAAAAyg4AAAAAAAAAAAAAAADwvw"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "."
					},
					"BgAAAAAPAAAAAAAAAQ8AAAAAAAAAAAAA6ggAAAAAAADrCAAAAAAAAAAAAABHBgAAAAAAAEgGAAAAAAAAAAAAAMMDAAAAAAAAxAMAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABgAAAKYBAAAAAAAApgEAAAAAAAAAAAAAAADwv9UBAAAAAAAA1QEAAAAAAAAAAAAAAADwv8MDAAAAAAAAwwMAAAAAAAAAAAAAAADwv0cGAAAAAAAARwYAAAAAAAAAAAAAAADwv+oIAAAAAAAA6ggAAAAAAAAAAAAAAADwvwAPAAAAAAAAAA8AAAAAAAAAAAAAAADwvw"
				],
				[
					242,
					1,
					"left_delete",
					null,
					"AQAAAJwBAAAAAAAAnAEAAAAAAAAWAAAAIGNvbXBvbmVudC5Ua0NvbXBvbmVudA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwBAAAAAAAAsgEAAAAAAAAAAAAAAADwvw"
				],
				[
					256,
					1,
					"left_delete",
					null,
					"BQAAAEsRAAAAAAAASxEAAAAAAAAKAAAAX0NvbXBvbmVudC0RAAAAAAAALREAAAAAAAAKAAAAX0NvbXBvbmVudFALAAAAAAAAUAsAAAAAAAAKAAAAX0NvbXBvbmVudDILAAAAAAAAMgsAAAAAAAAKAAAAX0NvbXBvbmVudJ4BAAAAAAAAngEAAAAAAAAKAAAAX0NvbXBvbmVudA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAAJ4BAAAAAAAAqAEAAAAAAAAAAAAAAADwvzILAAAAAAAAPAsAAAAAAAAAAAAAAADwv1ALAAAAAAAAWgsAAAAAAAAAAAAAAADwvy0RAAAAAAAANxEAAAAAAAAAAAAAAADwv0sRAAAAAAAAVREAAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": "componen"
					},
					"KAAAACMRAAAAAAAAJBEAAAAAAAAAAAAADxEAAAAAAAAQEQAAAAAAAAAAAAA8CwAAAAAAAD0LAAAAAAAAAAAAACgLAAAAAAAAKQsAAAAAAAAAAAAAngEAAAAAAACfAQAAAAAAAAAAAAAoEQAAAAAAACkRAAAAAAAAAAAAABMRAAAAAAAAFBEAAAAAAAAAAAAAPwsAAAAAAABACwAAAAAAAAAAAAAqCwAAAAAAACsLAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAALREAAAAAAAAuEQAAAAAAAAAAAAAXEQAAAAAAABgRAAAAAAAAAAAAAEILAAAAAAAAQwsAAAAAAAAAAAAALAsAAAAAAAAtCwAAAAAAAAAAAACgAQAAAAAAAKEBAAAAAAAAAAAAADIRAAAAAAAAMxEAAAAAAAAAAAAAGxEAAAAAAAAcEQAAAAAAAAAAAABFCwAAAAAAAEYLAAAAAAAAAAAAAC4LAAAAAAAALwsAAAAAAAAAAAAAoQEAAAAAAACiAQAAAAAAAAAAAAA3EQAAAAAAADgRAAAAAAAAAAAAAB8RAAAAAAAAIBEAAAAAAAAAAAAASAsAAAAAAABJCwAAAAAAAAAAAAAwCwAAAAAAADELAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAAPBEAAAAAAAA9EQAAAAAAAAAAAAAjEQAAAAAAACQRAAAAAAAAAAAAAEsLAAAAAAAATAsAAAAAAAAAAAAAMgsAAAAAAAAzCwAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAEERAAAAAAAAQhEAAAAAAAAAAAAAJxEAAAAAAAAoEQAAAAAAAAAAAABOCwAAAAAAAE8LAAAAAAAAAAAAADQLAAAAAAAANQsAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAABGEQAAAAAAAEcRAAAAAAAAAAAAACsRAAAAAAAALBEAAAAAAAAAAAAAUQsAAAAAAABSCwAAAAAAAAAAAAA2CwAAAAAAADcLAAAAAAAAAAAAAKUBAAAAAAAApgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAAJ4BAAAAAAAAngEAAAAAAAAAAAAAAADwvygLAAAAAAAAKAsAAAAAAAAAAAAAAADwvzwLAAAAAAAAPAsAAAAAAAAAAAAAAADwvw8RAAAAAAAADxEAAAAAAAAAAAAAAADwvyMRAAAAAAAAIxEAAAAAAAAAAAAAAADwvw"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "t.Base"
					},
					"HgAAAEsRAAAAAAAATBEAAAAAAAAAAAAALxEAAAAAAAAwEQAAAAAAAAAAAABUCwAAAAAAAFULAAAAAAAAAAAAADgLAAAAAAAAOQsAAAAAAAAAAAAApgEAAAAAAACnAQAAAAAAAAAAAABQEQAAAAAAAFERAAAAAAAAAAAAADMRAAAAAAAANBEAAAAAAAAAAAAAVwsAAAAAAABYCwAAAAAAAAAAAAA6CwAAAAAAADsLAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAVREAAAAAAABWEQAAAAAAAAAAAAA3EQAAAAAAADgRAAAAAAAAAAAAAFoLAAAAAAAAWwsAAAAAAAAAAAAAPAsAAAAAAAA9CwAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAFoRAAAAAAAAWxEAAAAAAAAAAAAAOxEAAAAAAAA8EQAAAAAAAAAAAABdCwAAAAAAAF4LAAAAAAAAAAAAAD4LAAAAAAAAPwsAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAABfEQAAAAAAAGARAAAAAAAAAAAAAD8RAAAAAAAAQBEAAAAAAAAAAAAAYAsAAAAAAABhCwAAAAAAAAAAAABACwAAAAAAAEELAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAZBEAAAAAAABlEQAAAAAAAAAAAABDEQAAAAAAAEQRAAAAAAAAAAAAAGMLAAAAAAAAZAsAAAAAAAAAAAAAQgsAAAAAAABDCwAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAAKYBAAAAAAAApgEAAAAAAAAAAAAAAADwvzgLAAAAAAAAOAsAAAAAAAAAAAAAAADwv1QLAAAAAAAAVAsAAAAAAAAAAAAAAADwvy8RAAAAAAAALxEAAAAAAAAAAAAAAADwv0sRAAAAAAAASxEAAAAAAAAAAAAAAADwvw"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "Componentr"
					},
					"MgAAAGkRAAAAAAAAahEAAAAAAAAAAAAARxEAAAAAAABIEQAAAAAAAAAAAABmCwAAAAAAAGcLAAAAAAAAAAAAAEQLAAAAAAAARQsAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAABuEQAAAAAAAG8RAAAAAAAAAAAAAEsRAAAAAAAATBEAAAAAAAAAAAAAaQsAAAAAAABqCwAAAAAAAAAAAABGCwAAAAAAAEcLAAAAAAAAAAAAAK0BAAAAAAAArgEAAAAAAAAAAAAAcxEAAAAAAAB0EQAAAAAAAAAAAABPEQAAAAAAAFARAAAAAAAAAAAAAGwLAAAAAAAAbQsAAAAAAAAAAAAASAsAAAAAAABJCwAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAHgRAAAAAAAAeREAAAAAAAAAAAAAUxEAAAAAAABUEQAAAAAAAAAAAABvCwAAAAAAAHALAAAAAAAAAAAAAEoLAAAAAAAASwsAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAAB9EQAAAAAAAH4RAAAAAAAAAAAAAFcRAAAAAAAAWBEAAAAAAAAAAAAAcgsAAAAAAABzCwAAAAAAAAAAAABMCwAAAAAAAE0LAAAAAAAAAAAAALABAAAAAAAAsQEAAAAAAAAAAAAAghEAAAAAAACDEQAAAAAAAAAAAABbEQAAAAAAAFwRAAAAAAAAAAAAAHULAAAAAAAAdgsAAAAAAAAAAAAATgsAAAAAAABPCwAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAAIcRAAAAAAAAiBEAAAAAAAAAAAAAXxEAAAAAAABgEQAAAAAAAAAAAAB4CwAAAAAAAHkLAAAAAAAAAAAAAFALAAAAAAAAUQsAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACMEQAAAAAAAI0RAAAAAAAAAAAAAGMRAAAAAAAAZBEAAAAAAAAAAAAAewsAAAAAAAB8CwAAAAAAAAAAAABSCwAAAAAAAFMLAAAAAAAAAAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAkREAAAAAAACSEQAAAAAAAAAAAABnEQAAAAAAAGgRAAAAAAAAAAAAAH4LAAAAAAAAfwsAAAAAAAAAAAAAVAsAAAAAAABVCwAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAAJYRAAAAAAAAlxEAAAAAAAAAAAAAaxEAAAAAAABsEQAAAAAAAAAAAACBCwAAAAAAAIILAAAAAAAAAAAAAFYLAAAAAAAAVwsAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAAKwBAAAAAAAArAEAAAAAAAAAAAAAAADwv0QLAAAAAAAARAsAAAAAAAAAAAAAAADwv2YLAAAAAAAAZgsAAAAAAAAAAAAAAADwv0cRAAAAAAAARxEAAAAAAAAAAAAAAADwv2kRAAAAAAAAaREAAAAAAAAAAAAAAADwvw"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"BQAAAJgRAAAAAAAAmBEAAAAAAAABAAAAbmwRAAAAAAAAbBEAAAAAAAABAAAAboELAAAAAAAAgQsAAAAAAAABAAAAblULAAAAAAAAVQsAAAAAAAABAAAAbrMBAAAAAAAAswEAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAALQBAAAAAAAAtAEAAAAAAAAAAAAAAADwv1YLAAAAAAAAVgsAAAAAAAAAAAAAAADwv4ILAAAAAAAAggsAAAAAAAAAAAAAAADwv20RAAAAAAAAbREAAAAAAAAAAAAAAADwv5kRAAAAAAAAmREAAAAAAAAAAAAAAADwvw"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "n"
					},
					"BQAAAJQRAAAAAAAAlREAAAAAAAAAAAAAaREAAAAAAABqEQAAAAAAAAAAAAB/CwAAAAAAAIALAAAAAAAAAAAAAFQLAAAAAAAAVQsAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAALMBAAAAAAAAswEAAAAAAAAAAAAAAADwv1QLAAAAAAAAVAsAAAAAAAAAAAAAAADwv38LAAAAAAAAfwsAAAAAAAAAAAAAAADwv2kRAAAAAAAAaREAAAAAAAAAAAAAAADwv5QRAAAAAAAAlBEAAAAAAAAAAAAAAADwvw"
				],
				[
					264,
					1,
					"left_delete",
					null,
					"BQAAAJoRAAAAAAAAmhEAAAAAAAABAAAAcm4RAAAAAAAAbhEAAAAAAAABAAAAcoMLAAAAAAAAgwsAAAAAAAABAAAAclcLAAAAAAAAVwsAAAAAAAABAAAAcrUBAAAAAAAAtQEAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAALYBAAAAAAAAtgEAAAAAAAAAAAAAAADwv1gLAAAAAAAAWAsAAAAAAAAAAAAAAADwv4QLAAAAAAAAhAsAAAAAAAAAAAAAAADwv28RAAAAAAAAbxEAAAAAAAAAAAAAAADwv5sRAAAAAAAAmxEAAAAAAAAAAAAAAADwvw"
				],
				[
					269,
					1,
					"left_delete",
					null,
					"AQAAAJwBAAAAAAAAnAEAAAAAAAAZAAAALCBjb21wb25lbnQuQmFzZUNvbXBvbmVudA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUBAAAAAAAAnAEAAAAAAAAAAAAAAADwvw"
				],
				[
					272,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA0hkAAAAAAADTGQAAIiIiQmFzZSBtb2R1bGUgY29udGFpbmluZyB0YWt0ayBidWlsdC1pbiBjb21wb25lbnRzLiIiIgoKZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZmllbGQKZnJvbSB0a2ludGVyIGltcG9ydCBCb29sZWFuVmFyCmZyb20gdGtpbnRlciBpbXBvcnQgSW1hZ2UgYXMgVGtJbWFnZQpmcm9tIHRraW50ZXIgaW1wb3J0IFN0cmluZ1Zhcgpmcm9tIHRraW50ZXIudHRrIGltcG9ydCBCdXR0b24sIENoZWNrYnV0dG9uLCBFbnRyeSwgRnJhbWUsIExhYmVsCmZyb20gdHlwaW5nIGltcG9ydCBDYWxsYWJsZSwgT3B0aW9uYWwKCmZyb20gLi4uIGltcG9ydCBOaWwsIE5pbFR5cGUsIHJlc29sdmUKZnJvbSAuLi5tZWRpYSBpbXBvcnQgSW1hZ2UKZnJvbSAuLi53cml0ZWFibGUgaW1wb3J0IFdyaXRlYWJsZQpmcm9tIC4gaW1wb3J0IGNvbXBvbmVudAoKCmNsYXNzIGZyYW1lKGNvbXBvbmVudC5Ua0NvbXBvbmVudCk6CiAgICBXaWRnZXQgPSBGcmFtZQoKICAgIGNsYXNzIEF0dHJzOgogICAgICAgIHdlaWdodDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIHBvczogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGxheTogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGJpbmQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBib290c3R5bGU6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBwYWRkaW5nOiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgYm9yZGVyd2lkdGg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICByZWxpZWY6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB3aWR0aDogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGhlaWdodDogaW50IHwgTmlsVHlwZSA9IE5pbAoKCmNsYXNzIGxhYmVsKGNvbXBvbmVudC5Ua0NvbXBvbmVudCk6CiAgICBXaWRnZXQgPSBMYWJlbAoKICAgIGNsYXNzIEF0dHJzOgogICAgICAgIHdlaWdodDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIHBvczogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGxheTogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGJpbmQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBib290c3R5bGU6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB0ZXh0OiBzdHIgPSAiZmFrZSIKICAgICAgICBmb3JlZ3JvdW5kOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgYmFja2dyb3VuZDogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHRleHRfY29sb3I6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBwYWR4OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgcGFkeTogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGZvbnQ6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBpbWFnZTogSW1hZ2UgfCBUa0ltYWdlIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGNvbXBvdW5kOiBzdHIgfCBOaWxUeXBlID0gTmlsCgoKY2xhc3MgYnV0dG9uKGNvbXBvbmVudC5Ua0NvbXBvbmVudCk6CiAgICBXaWRnZXQgPSBCdXR0b24KCiAgICBjbGFzcyBBdHRyczoKICAgICAgICB3ZWlnaHQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBwb3M6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBsYXk6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBiaW5kOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgYm9vdHN0eWxlOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgdGV4dDogc3RyID0gImZha2UiCiAgICAgICAgY29tbWFuZDogQ2FsbGFibGUgPSBsYW1iZGE6IE5vbmUKICAgICAgICBwYWR4OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgcGFkeTogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGZnOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgYmc6IHN0ciB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBpbWFnZTogSW1hZ2UgfCBUa0ltYWdlIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGNvbXBvdW5kOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgYmFja2dyb3VuZDogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGZvcmVncm91bmQ6IHN0ciB8IE5pbFR5cGUgPSBOaWwKCgpjbGFzcyBlbnRyeShjb21wb25lbnQuVGtDb21wb25lbnQpOgogICAgV2lkZ2V0ID0gRW50cnkKICAgIF9hdHRyX2lnbm9yZSA9ICgidGV4dCIsKQoKICAgIGNsYXNzIEF0dHJzOgogICAgICAgIHdlaWdodDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIHBvczogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGxheTogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgIGJvb3RzdHlsZTogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHRleHQ6IHN0ciA9ICJmYWtlIgogICAgICAgIHBhZHg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBwYWR5OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgd2lkdGg6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICBmb250OiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgdGV4dHZhcmlhYmxlOiBTdHJpbmdWYXIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgc2hvdzogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIGJpbmQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKCiAgICBkZWYgY3JlYXRlKHNlbGYsIHBhcmVudDogIk9wdGlvbmFsW2NvbXBvbmVudC5CYXNlQ29tcG9uZW50XSIgPSBOb25lKToKICAgICAgICBjb21wb25lbnQuQmFzZUNvbXBvbmVudC5jcmVhdGUoc2VsZikKICAgICAgICBwYXJlbnQgPSBwYXJlbnQKICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICAgICoqewogICAgICAgICAgICAgICAgc2VsZi5jb25mX2FsaWFzc2VzW2tdOiByZXNvbHZlKHYpCiAgICAgICAgICAgICAgICBmb3IgaywgdiBpbiB2YXJzKHNlbGYuYXR0cnMpLml0ZW1zKCkKICAgICAgICAgICAgICAgIGlmIGsgaW4gc2VsZi5jb25mX2FsaWFzc2VzIGFuZCB2IGlzIG5vdCBOaWwKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAidGV4dHZhcmlhYmxlIiBub3QgaW4gcGFyYW1zOgogICAgICAgICAgICBpZiBpc2luc3RhbmNlKHNlbGYuYXR0cnMudGV4dCwgV3JpdGVhYmxlKToKICAgICAgICAgICAgICAgIHNlbGYudGV4dHZhcmlhYmxlID0gc2VsZi5hdHRycy50ZXh0LnN0cmluZ3ZhcgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgc2VsZi50ZXh0dmFyaWFibGUgPSBTdHJpbmdWYXIoKQogICAgICAgICAgICAgICAgc2VsZi50ZXh0dmFyaWFibGUuc2V0KHNlbGYuYXR0cnMudGV4dCkKICAgICAgICAgICAgcGFyYW1zWyJ0ZXh0dmFyaWFibGUiXSA9IHNlbGYudGV4dHZhcmlhYmxlCiAgICAgICAgICAgIHNlbGYuYXR0cnMudGV4dHZhcmlhYmxlID0gc2VsZi50ZXh0dmFyaWFibGUKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLnRleHR2YXJpYWJsZSA9IHBhcmFtc1sidGV4dHZhcmlhYmxlIl0KICAgICAgICBzZWxmLmNvbnRhaW5lciA9IHNlbGYub3V0bGV0ID0gc2VsZi5XaWRnZXQoCiAgICAgICAgICAgIG1hc3Rlcj1wYXJlbnQsCiAgICAgICAgICAgICoqcGFyYW1zLAogICAgICAgICkKICAgICAgICBzZWxmLmluaXRfZ2VvbWV0cnkoKQogICAgICAgIHNlbGYubWFrZV9iaW5kaW5ncygpCgoKY2xhc3MgY2hlY2tidXR0b24oY29tcG9uZW50LlRrQ29tcG9uZW50KToKICAgIFdpZGdldCA9IENoZWNrYnV0dG9uCiAgICBfYXR0cl9pZ25vcmUgPSAoImNoZWNrZWQiLCkKCiAgICBjbGFzcyBBdHRyczoKICAgICAgICB3ZWlnaHQ6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBwb3M6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBsYXk6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICBiaW5kOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgYm9vdHN0eWxlOiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgY2hlY2tlZDogYm9vbCA9IEZhbHNlCiAgICAgICAgcGFkeDogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHBhZHk6IGludCB8IE5pbFR5cGUgPSBOaWwKICAgICAgICB3aWR0aDogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgIHZhcmlhYmxlOiBCb29sZWFuVmFyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgIF9pZ25vcmUgPSAoImNoZWNrZWQiLCkKCiAgICBkZWYgY3JlYXRlKHNlbGYsIHBhcmVudDogIk9wdGlvbmFsW2NvbXBvbmVudC5CYXNlQ29tcG9uZW50XSIgPSBOb25lKToKICAgICAgICBjb21wb25lbnQuQmFzZUNvbXBvbmVudC5jcmVhdGUoc2VsZikKICAgICAgICBwYXJlbnQgPSBwYXJlbnQKICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICAgICoqewogICAgICAgICAgICAgICAgc2VsZi5jb25mX2FsaWFzc2VzW2tdOiByZXNvbHZlKHYpCiAgICAgICAgICAgICAgICBmb3IgaywgdiBpbiB2YXJzKHNlbGYuYXR0cnMpLml0ZW1zKCkKICAgICAgICAgICAgICAgIGlmIGsgaW4gc2VsZi5jb25mX2FsaWFzc2VzIGFuZCB2IGlzIG5vdCBOaWwKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAidmFyaWFibGUiIG5vdCBpbiBwYXJhbXM6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uoc2VsZi5hdHRycy5jaGVja2VkLCBXcml0ZWFibGUpOgogICAgICAgICAgICAgICAgc2VsZi52YXJpYWJsZSA9IHNlbGYuYXR0cnMuY2hlY2tlZC5ib29sZWFudmFyCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLnZhcmlhYmxlID0gQm9vbGVhblZhcih2YWx1ZT1zZWxmLmF0dHJzLmNoZWNrZWQpCiAgICAgICAgICAgIHBhcmFtc1sidmFyaWFibGUiXSA9IHNlbGYudmFyaWFibGUKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLnZhcmlhYmxlID0gcGFyYW1zWyJ2YXJpYWJsZSJdCiAgICAgICAgc2VsZi5jb250YWluZXIgPSBzZWxmLldpZGdldCgKICAgICAgICAgICAgbWFzdGVyPXBhcmVudCwKICAgICAgICAgICAgKipwYXJhbXMsCiAgICAgICAgKQogICAgICAgIHNlbGYub3V0bGV0ID0gTm9uZQogICAgICAgIHNlbGYuaW5pdF9nZW9tZXRyeSgpCiAgICAgICAgc2VsZi5tYWtlX2JpbmRpbmdzKCkKCgpjbGFzcyBzZG93bjoKICAgIGZyb20gLi4uc2Rvd24gaW1wb3J0IExleGVkQ29kZSBhcyBjb2RlCiAgICBmcm9tIC4uLnNkb3duIGltcG9ydCBTZG93blZpZXdlciBhcyB2aWV3CgoKdHJ5OgogICAgZnJvbSBjdXN0b210a2ludGVyIGltcG9ydCBDVGtCdXR0b24sIENUa0VudHJ5LCBDVGtGcmFtZSwgQ1RrTGFiZWwKZXhjZXB0IEltcG9ydEVycm9yOgogICAgcGFzcwplbHNlOgoKICAgIGNsYXNzIGN0azoKCiAgICAgICAgY2xhc3MgZnJhbWUoZnJhbWUpOgogICAgICAgICAgICBXaWRnZXQgPSBDVGtGcmFtZQoKICAgICAgICBjbGFzcyBsYWJlbChsYWJlbCk6CiAgICAgICAgICAgIFdpZGdldCA9IENUa0xhYmVsCgogICAgICAgICAgICBjbGFzcyBhdHRyczoKICAgICAgICAgICAgICAgIHRleHQ6IHN0ciA9ICJmYWtlIgogICAgICAgICAgICAgICAgZmdfY29sb3I6IHN0ciA9IE5pbAogICAgICAgICAgICAgICAgYmdfY29sb3I6IHN0ciA9IE5pbAogICAgICAgICAgICAgICAgdGV4dF9jb2xvcjogc3RyID0gTmlsCiAgICAgICAgICAgICAgICBwYWR4OiBpbnQgPSBOaWwKICAgICAgICAgICAgICAgIHBhZHk6IGludCA9IE5pbAogICAgICAgICAgICAgICAgZm9udDogc3RyID0gTmlsCgogICAgICAgIGNsYXNzIGJ1dHRvbihidXR0b24pOgogICAgICAgICAgICBXaWRnZXQgPSBDVGtCdXR0b24KCiAgICAgICAgY2xhc3MgZW50cnkoZW50cnkpOgogICAgICAgICAgICBjbGFzcyBBdHRyczoKICAgICAgICAgICAgICAgIHdlaWdodDogZGljdCA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1kaWN0KQogICAgICAgICAgICAgICAgcG9zOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCiAgICAgICAgICAgICAgICBsYXk6IGRpY3QgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9ZGljdCkKICAgICAgICAgICAgICAgIGJvb3RzdHlsZTogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgICAgICAgICAgdGV4dDogc3RyID0gImZha2UiCiAgICAgICAgICAgICAgICBwYWR4OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICBwYWR5OiBpbnQgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICB3aWR0aDogaW50IHwgTmlsVHlwZSA9IE5pbAogICAgICAgICAgICAgICAgZm9udDogc3RyIHwgTmlsVHlwZSA9IE5pbAogICAgICAgICAgICAgICAgdGV4dHZhcmlhYmxlOiBTdHJpbmdWYXIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICBzaG93OiBzdHIgfCBOaWxUeXBlID0gTmlsCiAgICAgICAgICAgICAgICBiaW5kOiBkaWN0ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWRpY3QpCgogICAgICAgICAgICBXaWRnZXQgPSBDVGtFbnRyeQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwBAAAAAAAAnAEAAAAAAAAAAAAAAADwvw"
				],
				[
					280,
					2,
					"left_delete",
					null,
					"AgAAACgBAAAAAAAAKAEAAAAAAAABAAAALicBAAAAAAAAJwEAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkBAAAAAAAAKQEAAAAAAAAAAAAAAABIQA"
				],
				[
					283,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcBAAAAAAAAJwEAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					2,
					"left_delete",
					null,
					"AgAAAEwBAAAAAAAATAEAAAAAAAABAAAALksBAAAAAAAASwEAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0BAAAAAAAATQEAAAAAAAAAAAAAAADwvw"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": " import"
					},
					"BwAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABNAQAAAAAAAAAAAABNAQAAAAAAAE4BAAAAAAAAAAAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAABQAQAAAAAAAFEBAAAAAAAAAAAAAFEBAAAAAAAAUgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsBAAAAAAAASwEAAAAAAAAAAAAAAADwvw"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " media"
					},
					"BgAAAFIBAAAAAAAAUwEAAAAAAAAAAAAAUwEAAAAAAABUAQAAAAAAAAAAAABUAQAAAAAAAFUBAAAAAAAAAAAAAFUBAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABXAQAAAAAAAAAAAABXAQAAAAAAAFgBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIBAAAAAAAAUgEAAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgBAAAAAAAAWQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgBAAAAAAAAWAEAAAAAAAAAAAAAAADwvw"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "media."
					},
					"EgAAACkIAAAAAAAAKggAAAAAAAAAAAAA1AUAAAAAAADVBQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAACwIAAAAAAAALQgAAAAAAAAAAAAA1gUAAAAAAADXBQAAAAAAAAAAAABnAQAAAAAAAGgBAAAAAAAAAAAAAC8IAAAAAAAAMAgAAAAAAAAAAAAA2AUAAAAAAADZBQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAADIIAAAAAAAAMwgAAAAAAAAAAAAA2gUAAAAAAADbBQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAADUIAAAAAAAANggAAAAAAAAAAAAA3AUAAAAAAADdBQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAADgIAAAAAAAAOQgAAAAAAAAAAAAA3gUAAAAAAADfBQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAGYBAAAAAAAAZgEAAAAAAAAAAAAAAADwv9QFAAAAAAAA1AUAAAAAAAAAAAAAAADwvykIAAAAAAAAKQgAAAAAAAAAAAAAAADwvw"
				],
				[
					317,
					1,
					"left_delete",
					null,
					"AQAAAFgBAAAAAAAAWAEAAAAAAAAZAAAAIG1lZGlhIGltcG9ydCBtZWRpYS5JbWFnZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEBAAAAAAAAWAEAAAAAAAAAAAAAAADwvw"
				],
				[
					320,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgBAAAAAAAAWAEAAAAAAAAAAAAAAADwvw"
				],
				[
					324,
					2,
					"left_delete",
					null,
					"AgAAAGABAAAAAAAAYAEAAAAAAAABAAAALl8BAAAAAAAAXwEAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEBAAAAAAAAYQEAAAAAAAAAAAAAAABIQA"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": " import"
					},
					"BwAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAGUBAAAAAAAAZgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8BAAAAAAAAXwEAAAAAAAAAAAAAAADwvw"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYBAAAAAAAAZgEAAAAAAAAAAAAAAADwvw"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "write"
					},
					"DwAAAN0SAAAAAAAA3hIAAAAAAAAAAAAAyQwAAAAAAADKDAAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAOASAAAAAAAA4RIAAAAAAAAAAAAAywwAAAAAAADMDAAAAAAAAAAAAAB5AQAAAAAAAHoBAAAAAAAAAAAAAOMSAAAAAAAA5BIAAAAAAAAAAAAAzQwAAAAAAADODAAAAAAAAAAAAAB6AQAAAAAAAHsBAAAAAAAAAAAAAOYSAAAAAAAA5xIAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAAB7AQAAAAAAAHwBAAAAAAAAAAAAAOkSAAAAAAAA6hIAAAAAAAAAAAAA0QwAAAAAAADSDAAAAAAAAAAAAAB8AQAAAAAAAH0BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAHgBAAAAAAAAeAEAAAAAAAAAAAAAAADwv8kMAAAAAAAAyQwAAAAAAAAAAAAAAADwv90SAAAAAAAA3RIAAAAAAAAAAAAAAADwvw"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "able."
					},
					"DwAAAOwSAAAAAAAA7RIAAAAAAAAAAAAA0wwAAAAAAADUDAAAAAAAAAAAAAB9AQAAAAAAAH4BAAAAAAAAAAAAAO8SAAAAAAAA8BIAAAAAAAAAAAAA1QwAAAAAAADWDAAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAPISAAAAAAAA8xIAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAAB/AQAAAAAAAIABAAAAAAAAAAAAAPUSAAAAAAAA9hIAAAAAAAAAAAAA2QwAAAAAAADaDAAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAPgSAAAAAAAA+RIAAAAAAAAAAAAA2wwAAAAAAADcDAAAAAAAAAAAAACBAQAAAAAAAIIBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAH0BAAAAAAAAfQEAAAAAAAAAAAAAAADwv9MMAAAAAAAA0wwAAAAAAAAAAAAAAADwv+wSAAAAAAAA7BIAAAAAAAAAAAAAAADwvw"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AQAAAHABAAAAAAAAcAEAAAAAAAAbAAAAIGltcG9ydCB3cml0ZWFibGUuV3JpdGVhYmxl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsBAAAAAAAAcAEAAAAAAAAAAAAAAADwvw"
				],
				[
					367,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHABAAAAAAAAcAEAAAAAAAAAAAAAAADwvw"
				],
				[
					372,
					1,
					"cut",
					null,
					"AQAAAGcBAAAAAAAAZwEAAAAAAAAJAAAAd3JpdGVhYmxl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHABAAAAAAAAZwEAAAAAAAAAAAAAAADwvw"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFgBAAAAAAAAWQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgBAAAAAAAAWAEAAAAAAAAAAAAAAADwvw"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkBAAAAAAAAWgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkBAAAAAAAAWQEAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					1,
					"paste",
					null,
					"AQAAAFoBAAAAAAAAYwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoBAAAAAAAAWgEAAAAAAAAAAAAAAADwvw"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGMBAAAAAAAAZAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMBAAAAAAAAYwEAAAAAAAAAAAAAAADwvw"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " com"
					},
					"BAAAAGQBAAAAAAAAZQEAAAAAAAAAAAAAZQEAAAAAAABmAQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAAGcBAAAAAAAAaAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQBAAAAAAAAZAEAAAAAAAAAAAAAAADwvw"
				],
				[
					380,
					1,
					"insert_completion",
					{
						"completion": "component",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "component"
					},
					"AgAAAGUBAAAAAAAAZQEAAAAAAAADAAAAY29tZQEAAAAAAABuAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgBAAAAAAAAaAEAAAAAAAAAAAAAAADwvw"
				],
				[
					384,
					1,
					"left_delete",
					null,
					"AQAAAG8BAAAAAAAAbwEAAAAAAAAnAAAAZnJvbSAuIGltcG9ydCAKZnJvbSAuIGltcG9ydCBjb21wb25lbnQK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8BAAAAAAAAlgEAAAAAAAAAAAAAAADwvw"
				],
				[
					387,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8BAAAAAAAAbwEAAAAAAAAAAAAAAADwvw"
				],
				[
					392,
					2,
					"left_delete",
					null,
					"AgAAAKMUAAAAAAAAoxQAAAAAAAABAAAALqIUAAAAAAAAohQAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQUAAAAAAAApBQAAAAAAAAAAAAAAADwvw"
				],
				[
					395,
					1,
					"left_delete",
					null,
					"AQAAAMsUAAAAAAAAyxQAAAAAAAACAAAALi4",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsUAAAAAAAAzRQAAAAAAAAAAAAAAADwvw"
				],
				[
					398,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsUAAAAAAAAyxQAAAAAAAAAAAAAAADwvw"
				],
				[
					437,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsUAAAAAAAA2BQAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk Docs",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/py310.sublime-build",
					""
				],
				[
					"Packages/User/py312.sublime-build",
					""
				],
				[
					"Packages/User/py313.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk admin",
					""
				],
				[
					"Taktk notify",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk admin",
					""
				],
				[
					"Taktk simple",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk simple",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk admin",
					""
				],
				[
					"Taktk simple test",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/black.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk notify",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Black taktk",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/py310.sublime-build",
					""
				],
				[
					"Packages/User/py312.sublime-build",
					""
				],
				[
					"Packages/User/py313.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/black.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk Docs",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/py310.sublime-build",
					""
				],
				[
					"Packages/User/py312.sublime-build",
					""
				],
				[
					"Packages/User/py313.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk Docs",
				""
			]
		],
		[
			[
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"Taktk Docs",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/py310.sublime-build",
					""
				],
				[
					"Packages/User/py312.sublime-build",
					""
				],
				[
					"Packages/User/py313.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		],
		[
			[
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"isort taktk",
				""
			]
		],
		[
			[
				[
					"Black taktk",
					""
				],
				[
					"Taktk",
					""
				],
				[
					"isort taktk",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		],
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				],
				[
					"Packages/User/Django.sublime-build",
					""
				]
			],
			[
				"Packages/User/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				],
				[
					"Packages/User/Django.sublime-build",
					""
				],
				[
					"Packages/User/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/User/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/NSIS/NSIS.sublime-build",
					""
				],
				[
					"Packages/NSIS/NSIS.sublime-build",
					"strict"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/NSIS/NSIS.sublime-build",
				"strict"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/NSIS/NSIS.sublime-build",
					""
				],
				[
					"Packages/NSIS/NSIS.sublime-build",
					"strict"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/NSIS/NSIS.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/shellsy/shellsy.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/shellsy/shellsy.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/black.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/black.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Django.sublime-build",
					""
				],
				[
					"Packages/User/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/User/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Sbook",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/subliminal/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/sass.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				]
			],
			[
				"Packages/User/sass.sublime-build",
				""
			]
		],
		[
			[
				[
					"Taktk",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		],
		[
			[
				[
					"Taktk",
					""
				],
				[
					"Taktk admin",
					""
				],
				[
					"Taktk notify",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk admin",
				""
			]
		],
		[
			[
				[
					"Taktk",
					""
				],
				[
					"Taktk admin",
					""
				],
				[
					"Taktk simple test",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					""
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"JSON"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"Property List"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Block Style)"
				],
				[
					"Packages/PackageDev/Package/Convert to ....sublime-build",
					"YAML (Default Style)"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Taktk",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"anaconda",
				"Anaconda: McCabe complexity check"
			],
			[
				"black",
				"python-black: Format the selected code or the code of the entire file"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"bl",
				"python-black: Format the selected code or the code of the entire file"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"helium",
				"Helium: Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"notifi",
				"Open Github Notifications"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"waka",
				"WakaTime: Open Dashboard"
			],
			[
				"camel",
				"Convert Case: lowerCamelCase"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"lsp py",
				"Preferences: LSP-pylsp Settings"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"anac",
				"Anaconda: Goto Python object"
			],
			[
				"lab",
				"Preferences: LSP-basedpyright Settings"
			],
			[
				"lsp",
				"Preferences: LSP Settings"
			],
			[
				"UI",
				"UI: Select Theme"
			],
			[
				"cAMEL",
				"Convert Case: UpperCamelCase"
			],
			[
				"ui",
				"UI: Select Theme"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"reformat",
				"Preferences: Terminus Command Palette"
			],
			[
				"Package Control: dis",
				"Package Control: Disable Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: e",
				"Package Control: Enable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: add",
				"Package Control: Add Repository"
			],
			[
				"Package Control: I",
				"Package Control: Install Package"
			],
			[
				"Package Control: d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: D",
				"Package Control: Disable Package"
			],
			[
				"open",
				"Sublime Files: Open Navigator"
			],
			[
				"ter",
				"Terminal: Open"
			],
			[
				"Package Control: Add",
				"Package Control: Add Repository"
			],
			[
				"Package Control: l",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 52595))",
			"\nd",
			"\nimport socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 49491))"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/taktk",
		"/D/taktk/Lib",
		"/D/taktk/src",
		"/D/taktk/src/taktk"
	],
	"file_history":
	[
		"/C/Users/engon/.ipython/profile_default/ipython_config.py",
		"/C/.py/py_startup.py",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/User/Anaconda.sublime-settings",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/Anaconda/Anaconda.sublime-settings",
		"/D/taktk/src/taktk/sdown.py",
		"/D/taktk/src/taktk/component/builtin/__init__.py",
		"/D/taktk/pyproject.toml",
		"/D/taktk/src/taktk/component/builtin/sdown.py",
		"/D/taktk/src/taktk/component.py",
		"/D/taktk/examples/todoapp/todoapp/taktk.py",
		"/D/taktk/examples/noseman.obj",
		"/D/taktk/examples/load_obj.py",
		"/D/tkinter_gl/test/square.py",
		"/D/shellsy/src/shellsy/lexer.py",
		"/D/taktk/docs/whatsnew.rst",
		"/D/taktk/docs/index.rst",
		"/D/taktk/examples/login_page.py",
		"/D/taktk/docs/quickstart.rst",
		"/D/taktk/src/taktk/lexer.py",
		"/C/Users/engon/AppData/Local/Packages/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe/LocalState/settings.json",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/subliminal/subliminal-Python.sublime-syntax",
		"/D/taktk/docs/conf.py",
		"/D/taktk/examples/maps.py",
		"/D/taktk/examples/tiny_3d.py",
		"/D/taktk/docs/requirements.txt",
		"/D/taktk/docs/installation.rst",
		"/D/taktk/docs/_static/github.svg",
		"/D/taktk/docs/todo.md",
		"/D/taktk/docs/tutorials/index.rst",
		"/D/taktk/docs/docutils.conf",
		"/D/taktk/.pre-commit-config.yaml",
		"/D/taktk/.readthedocs.yaml",
		"/D/taktk/requirements.txt",
		"/D/taktk/taktk.sublime-project",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/User/SublimeTextTrans.sublime-settings",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/Transparency/SublimeTextTrans.sublime-settings",
		"/D/utils/rmbg.py",
		"/D/taktk/README.md",
		"/D/taktk/examples/todoapp/main.py",
		"/D/taktk/examples/todo.py",
		"/D/taktk/src/taktk/component/__init__.py",
		"/D/taktk/src/taktk/notification.py",
		"/D/taktk/src/taktk/dictionary.py",
		"/D/taktk/src/taktk/writeable.py",
		"/D/taktk/src/taktk/template.py",
		"/C/Users/engon/OneDrive/Documents/PowerShell/Microsoft.PowerShell_profile.ps1",
		"/D/taktk/src/taktk/component/builtin/ctk.py",
		"/D/TBomb/bomber.py",
		"/D/taktk/examples/todoapp/todoapp/admin.py",
		"/D/taktk/examples/notify.py",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/User/Sublime Text Settings.sublime-settings",
		"/D/taktk/src/taktk/component/parser.py",
		"/D/nanoGPT/out-shakespeare-char/ckpt.pt",
		"/D/taktk/src/taktk/application.py",
		"/D/taktk/src/taktk/__init__.py",
		"/D/taktk/examples/todoapp/todoapp/dictionaries/English.yml",
		"/D/taktk/examples/todoapp/todoapp/dictionaries/French.yml",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/Github Notifications/githubNotif.sublime-settings",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/User/githubNotif.sublime-settings",
		"/D/taktk/examples/todoapp/todoapp/pages/sign.py",
		"/D/taktk/.gitignore",
		"/D/taktk/examples/todoapp/todoapp/pages/__init__.py",
		"/D/taktk/examples/acrylic.py",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/User/py313.sublime-build",
		"/C/taktk/examples/todoapp/todoapp/__init__.py",
		"/C/taktk/examples/todoapp/main.py",
		"/C/taktk/examples/todoapp/todoapp/pages/users.py",
		"/C/taktk/examples/todoapp/todoapp/pages/todos.py",
		"/C/taktk/examples/todoapp/todoapp/pages/_user.py",
		"/C/taktk/examples/todoapp/todoapp/pages/__init__.py",
		"/C/taktk/src/taktk/page.py",
		"/C/taktk/src/taktk/application.py",
		"/C/taktk/examples/todoapp/todoapp/pages/sign.py",
		"/C/taktk/src/taktk/component/__init__.py",
		"/C/taktk/examples/todoapp/todoapp/store.json",
		"/C/taktk/src/taktk/component/instructions.py",
		"/C/taktk/src/taktk/store.py",
		"/C/taktk/src/taktk/component/builtin/__init__.py",
		"/C/taktk/src/taktk/dictionary.py",
		"/C/taktk/src/taktk/__init__.py",
		"/C/taktk/src/taktk/component/builtin/taktk.py",
		"/C/taktk/src/taktk/media.py",
		"/C/taktk/src/taktk/application_server.py",
		"/C/taktk/taktk.sublime-project",
		"/C/taktk/src/taktk/__main__.py",
		"/C/Program Files/Python313/Lib/http/server.py",
		"/C/taktk/examples/todoapp/todoapp/media/img/rmbg.py",
		"/C/taktk/examples/video.py",
		"/C/taktk/src/taktk/notification.py",
		"/C/gh_models/main.py",
		"/C/gh_models/log.md",
		"/C/Users/engon/OneDrive/Documents/Rainmeter/Skins/GMailNotify/GMailNotify.ini",
		"/C/Users/engon/OneDrive/Desktop/bot.py",
		"/C/djam/main.py",
		"/C/Users/engon/OneDrive/Documents/Rainmeter/Skins/W98PLAYER/W98PLAYER.ini",
		"/C/taktk/examples/todoapp/todoapp/data.json",
		"/C/Program Files/Python313/Lib/socketserver.py",
		"/C/taktk/examples/todoapp/todoapp/pages/settings.py",
		"/C/taktk/src/taktk/component/parser.py",
		"/C/taktk/examples/todoapp/todoapp/admin.py",
		"/C/taktk/examples/video_vlc.py",
		"/C/taktk/src/taktk/menu.py",
		"/C/Users/engon/requirements.txt",
		"/C/taktk/src/taktk/component/builtin/tk.py",
		"/C/taktk/src/taktk/settings.py",
		"/C/taktk/examples/todoapp/todoapp/dictionaries/French.yml",
		"/C/taktk/examples/todoapp/todoapp/dictionaries/English.yml",
		"/C/taktk/src/taktk/writeable.py",
		"/C/taktk/examples/todo.py",
		"/C/Users/engon/AppData/Roaming/Python/Python312/site-packages/pyoload/__init__.py",
		"/C/taktk/examples/simple.py",
		"/C/taktk/examples/todoapp/data.json",
		"/C/shellsy/src/shellsy/settings.py",
		"/C/taktk/.gitignore",
		"/C/taktk/examples/application/todoapp/__init__.py",
		"/C/taktk/examples/application/todoapp/pages/todos.py",
		"/C/taktk/pyproject.toml",
		"/C/taktk/examples/application/todoapp/dictionaries/English.yml",
		"/C/taktk/examples/application/todoapp/dictionaries/French.yml",
		"/C/taktk/README.md",
		"/C/taktk/src/taktk/shellsy.py",
		"/C/Users/engon/AppData/Roaming/Sublime Text/Packages/User/WakaTime.sublime-settings",
		"/C/taktk/examples/notify.py",
		"/C/taktk/examples/application/todoapp/dictionary/French.yml",
		"/C/taktk/examples/application/todoapp/media/img/rmbg.py",
		"/C/taktk/examples/application/todoapp/pages/_layout.py",
		"/C/taktk/examples/application/todoapp/pages/__init__.py",
		"/C/taktk/examples/application/todoapp/dictionary/English.yml"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"State",
			"phantom",
			"false",
			"show",
			"hide",
			"Expression",
			"TkComponent",
			"_Component",
			"Writeable",
			"Image",
			"_Component",
			"TkComponent",
			"_Component",
			"Writeable",
			"Namespace",
			"evaluate_literal",
			"Template",
			"component",
			"pep8.ig",
			"writeable",
			"Writeable",
			"Namespace",
			"Translation",
			"textvariable",
			"value",
			"false",
			"basic",
			"false",
			"/ 10",
			"window",
			"self.square_widget",
			"SquareWidget",
			"glVertex3f",
			",  ",
			"self",
			"GL.glVertex2d",
			"SquareWidget",
			"Toplevel",
			"vertex",
			"mesh",
			"vertices",
			"model",
			"load_3d",
			"load_obj",
			"shellsy",
			"include(\"python\")",
			"subscribtion",
			"binding",
			"lambdas",
			"interpolation",
			"lambdas",
			"interpolation",
			"takml",
			"TaktkLexer",
			"taktk-literal",
			"taktk-args",
			"args",
			"Punctuation",
			"Name",
			"my_custom_lexer",
			"LEXER_ALIAS",
			"LEXER_NAME",
			"my_custom_lexer",
			"widget",
			"library",
			"quickstart",
			"Save",
			"Open",
			"New",
			"File",
			"value",
			"entry",
			"html_theme_options",
			"theme_options",
			"PYGMENTS_THEME",
			"sphinxawesome_theme",
			"sphinx_rtd_theme",
			"alabaster",
			"set",
			"push",
			"keyword",
			"set_name",
			"val",
			"set_name",
			"gets",
			"sets",
			"dicts",
			"eval",
			"en",
			"grid",
			"_should_update_",
			"_subscribers",
			"_subscribers_",
			"Expression",
			"subscribing",
			"no_tk_update",
			"no_writable_update",
			"_should_tk_update_",
			"_tk_update_",
			"subscribeable",
			"subscibing",
			"function",
			"true",
			"debounce",
			"writable",
			"str",
			"getter",
			"string",
			"warn",
			"warn_subscribers",
			"_value_",
			"_last_",
			"_watch_changes_",
			"_subscribe_",
			"_unsubscribe_",
			"_warn_subscribers_",
			"st",
			"expr",
			"st",
			"aes_string",
			"form",
			"u",
			"component",
			"self",
			"english",
			"en",
			"Light",
			"signin"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			" +",
			"",
			"store",
			"cls.from_dict(",
			"_Component"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "examples/simple.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 307,
						"regions":
						{
						},
						"selection":
						[
							[
								212,
								212
							]
						],
						"settings":
						{
							"complete_all_parameters": false,
							"complete_parameters": false,
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/taktk/component.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12963,
						"regions":
						{
						},
						"selection":
						[
							[
								867,
								867
							]
						],
						"settings":
						{
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/taktk/writeable.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9928,
						"regions":
						{
						},
						"selection":
						[
							[
								387,
								387
							]
						],
						"settings":
						{
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 156.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5898,
						"regions":
						{
						},
						"selection":
						[
							[
								3158,
								3158
							]
						],
						"settings":
						{
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1870.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/taktk/template.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18764,
						"regions":
						{
						},
						"selection":
						[
							[
								13315,
								13315
							]
						],
						"settings":
						{
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 5239.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/taktk/components.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6592,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 57.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 187.0
	},
	"output.Terminus 2":
	{
		"height": 134.0
	},
	"output.Terminus 3":
	{
		"height": 151.0
	},
	"output.Terminus 4":
	{
		"height": 146.0
	},
	"output.Terminus 5":
	{
		"height": 126.0
	},
	"output.Terminus 6":
	{
		"height": 220.0
	},
	"output.diff_views":
	{
		"height": 527.0
	},
	"output.exec":
	{
		"height": 114.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.golang_build":
	{
		"height": 126.0
	},
	"output.gotools_syntax_errors":
	{
		"height": 98.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.stino_build_panel":
	{
		"height": 0.0
	},
	"output.stino_panel":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "taktk.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\taktic\\desktop\\taktic-desktop.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 129.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"gt_next"
			]
		],
		"width": 598.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 305.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
